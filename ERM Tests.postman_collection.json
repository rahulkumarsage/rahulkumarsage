{
	"info": {
		"_postman_id": "ea98d41d-76b3-44f8-bf51-f46d0236d088",
		"name": "ERM Tests",
		"description": "Postman tests for Entity Relationship Management",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19643159"
	},
	"item": [
		{
			"name": "Addresses (Client)",
			"item": [
				{
					"name": "Create Client Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"addressId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"addressId\"));\r",
									"\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "////Person Address\r\n\r\n// {\r\n//     \"Name\": \"{{$randomFullName}}\",\r\n//     \"AddressTypes\": [\r\n//         {\r\n//             \"Id\": \"{{addType_Person}}\"\r\n//         }\r\n//     ],\r\n//     \"AddressLine1\": \"{{$randomStreetAddress}}\",\r\n//     \"AddressLine2\": \"{{$randomStreetName}}\",\r\n//     \"Province\": \"{{$randomCountry}}\",\r\n//     \"City\": \"{{$randomCity}}\",\r\n//     \"Suburb\": \"{{Suburb}}\",\r\n//     \"PostCode\": \"{{PostCode}}\",\r\n//     \"CountryCode\": \"{{CountryCode}}\",\r\n//     \"Locale\": {\r\n//         \"Id\": \"{{addLocale}}\"\r\n//     }\r\n// }\r\n\r\n\r\n// Business Address\r\n{\r\n    \"Name\": \"{{$randomFullName}}\",\r\n    \"AddressTypes\": [\r\n        {\r\n            \"Id\": \"{{addType_Business}}\"\r\n        }\r\n    ],\r\n    \"AddressLine1\": \"{{$randomStreetAddress}}\",\r\n    \"AddressLine2\": \"{{$randomStreetName}}\",\r\n    \"Province\": \"{{$randomCountry}}\",\r\n    \"City\": \"{{$randomCity}}\",\r\n    \"Suburb\": \"{{Suburb}}\",\r\n    \"PostCode\": \"{{PostCode}}\",\r\n    \"CountryCode\": \"{{CountryCode}}\",\r\n    \"Locale\": {\r\n        \"Id\": \"{{addLocale}}\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/addresses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"addresses"
							]
						},
						"description": "Post endpoint to create an Address for an entity"
					},
					"response": []
				},
				{
					"name": "Create Client Link Address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"AddressTypes\": [ {\r\n        \"Id\":\"f911182a-e519-667d-b0f0-285523926199\"\r\n    } ],\r\n    \"Address\":{\r\n        \"Id\":\"2d7eaced-19b0-3830-b5ab-7782937b524a\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/clients/{{clientId}}/addresses/link-address",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"addresses",
								"link-address"
							]
						},
						"description": "Post endpoint to create a link to an Address for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Client Address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/addresses/{{addressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"addresses",
								"{{addressId}}"
							]
						},
						"description": "Delete endpoint to remove an Address from an entity"
					},
					"response": []
				},
				{
					"name": "Get Client Address by Id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/addresses/{{addressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"addresses",
								"{{addressId}}"
							]
						},
						"description": "Get endpoint to retrieve an Address for an entity"
					},
					"response": []
				},
				{
					"name": "Get Client Addresses",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/addresses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"addresses"
							]
						},
						"description": "Get endpoint to retrieve all Addresses for an entity"
					},
					"response": []
				},
				{
					"name": "Update Client Address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"AddressLine1\": \"{{$randomStreetAddress}}\",\r\n    \"AddressLine2\": \"{{$randomStreetName}}\",\r\n    \"Province\": \"{{$randomCountry}}\",\r\n    \"City\": \"{{$randomCity}}\",\r\n    \"Suburb\": \"{{Suburb}}\",\r\n    \"PostCode\": \"{{PostCode}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/addresses/{{addressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"addresses",
								"{{addressId}}"
							]
						},
						"description": "Patch endpoint to update an Address for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Addresses (Contact)",
			"item": [
				{
					"name": "Create Contact Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"addressId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"addressId\"));\r",
									"\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "//Person Address\r\n\r\n{\r\n    \"Name\": \"{{$randomFullName}}\",\r\n    \"AddressTypes\": [\r\n        {\r\n            \"Id\": \"{{addType_Person}}\"\r\n        }\r\n    ],\r\n    \"AddressLine1\": \"{{$randomStreetAddress}}\",\r\n    \"AddressLine2\": \"{{$randomStreetName}}\",\r\n    \"Province\": \"{{$randomCountry}}\",\r\n    \"City\": \"{{$randomCity}}\",\r\n    \"Suburb\": \"{{Suburb}}\",\r\n    \"PostCode\": \"{{PostCode}}\",\r\n    \"CountryCode\": \"{{CountryCode}}\",\r\n    \"Locale\": {\r\n        \"Id\": \"{{addLocale}}\"\r\n    }\r\n}\r\n\r\n\r\n//// Business Address\r\n// {\r\n//     \"Name\": \"{{$randomFullName}}\",\r\n//     \"AddressTypes\": [\r\n//         {\r\n//             \"Id\": \"{{addType_Business}}\"\r\n//         }\r\n//     ],\r\n//     \"AddressLine1\": \"{{$randomStreetAddress}}\",\r\n//     \"AddressLine2\": \"{{$randomStreetName}}\",\r\n//     \"Province\": \"{{$randomCountry}}\",\r\n//     \"City\": \"{{$randomCity}}\",\r\n//     \"Suburb\": \"{{Suburb}}\",\r\n//     \"PostCode\": \"{{PostCode}}\",\r\n//     \"CountryCode\": \"{{CountryCode}}\",\r\n//     \"Locale\": {\r\n//         \"Id\": \"{{addLocale}}\"\r\n//     }\r\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/addresses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"addresses"
							]
						},
						"description": "Post endpoint to create an Address for an entity"
					},
					"response": []
				},
				{
					"name": "Create Contact Link Address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"AddressTypes\": [ {\r\n        \"Id\":\"f911182a-e519-667d-b0f0-285523926199\"\r\n    } ],\r\n    \"Address\":{\r\n        \"Id\":\"2d7eaced-19b0-3830-b5ab-7782937b524a\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/addresses/link-address",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"addresses",
								"link-address"
							]
						},
						"description": "Post endpoint to create a link to an Address for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Contact Address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/addresses/{{addressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"addresses",
								"{{addressId}}"
							]
						},
						"description": "Delete endpoint to remove an Address from an entity"
					},
					"response": []
				},
				{
					"name": "Get Contact Address by Id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/addresses/{{addressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"addresses",
								"{{addressId}}"
							]
						},
						"description": "Get endpoint to retrieve an Address for an entity"
					},
					"response": []
				},
				{
					"name": "Get Contact Addresses",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/addresses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"addresses"
							]
						},
						"description": "Get endpoint to retrieve all Addresses for an entity"
					},
					"response": []
				},
				{
					"name": "Update Contact Address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"AddressLine1\": \"{{$randomStreetAddress}}\",\r\n    \"AddressLine2\": \"{{$randomStreetName}}\",\r\n    \"Province\": \"{{$randomCountry}}\",\r\n    \"City\": \"{{$randomCity}}\",\r\n    \"Suburb\": \"{{Suburb}}\",\r\n    \"PostCode\": \"{{PostCode}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/addresses/{{addressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"addresses",
								"{{addressId}}"
							]
						},
						"description": "Patch endpoint to update an Address for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Addresses (Customer)",
			"item": [
				{
					"name": "Create Customer Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"addressId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"addressId\"));\r",
									"\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "//Person Address\r\n\r\n{\r\n    \"Name\": \"{{$randomFullName}}\",\r\n    \"AddressTypes\": [\r\n        {\r\n            \"Id\": \"{{addType_Person}}\"\r\n        }\r\n    ],\r\n    \"AddressLine1\": \"{{$randomStreetAddress}}\",\r\n    \"AddressLine2\": \"{{$randomStreetName}}\",\r\n    \"Province\": \"{{$randomCountry}}\",\r\n    \"City\": \"{{$randomCity}}\",\r\n    \"Suburb\": \"{{Suburb}}\",\r\n    \"PostCode\": \"{{PostCode}}\",\r\n    \"CountryCode\": \"{{CountryCode}}\",\r\n    \"Locale\": {\r\n        \"Id\": \"{{addLocale}}\"\r\n    }\r\n}\r\n\r\n\r\n//// Business Address\r\n// {\r\n//     \"Name\": \"{{$randomFullName}}\",\r\n//     \"AddressTypes\": [\r\n//         {\r\n//             \"Id\": \"{{addType_Business}}\"\r\n//         }\r\n//     ],\r\n//     \"AddressLine1\": \"{{$randomStreetAddress}}\",\r\n//     \"AddressLine2\": \"{{$randomStreetName}}\",\r\n//     \"Province\": \"{{$randomCountry}}\",\r\n//     \"City\": \"{{$randomCity}}\",\r\n//     \"Suburb\": \"{{Suburb}}\",\r\n//     \"PostCode\": \"{{PostCode}}\",\r\n//     \"CountryCode\": \"{{CountryCode}}\",\r\n//     \"Locale\": {\r\n//         \"Id\": \"{{addLocale}}\"\r\n//     }\r\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/addresses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"addresses"
							]
						},
						"description": "Post endpoint to create an Address for an entity"
					},
					"response": []
				},
				{
					"name": "Create Customer Link Address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"AddressTypes\": [ {\r\n        \"Id\":\"f911182a-e519-667d-b0f0-285523926199\"\r\n    } ],\r\n    \"Address\":{\r\n        \"Id\":\"2d7eaced-19b0-3830-b5ab-7782937b524a\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/addresses/link-address",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"addresses",
								"link-address"
							]
						},
						"description": "Post endpoint to create a link to an Address for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Customer Address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/addresses/{{addressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"addresses",
								"{{addressId}}"
							]
						},
						"description": "Delete endpoint to remove an Address from an entity"
					},
					"response": []
				},
				{
					"name": "Get Customer Address by Id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/addresses/{{addressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"addresses",
								"{{addressId}}"
							]
						},
						"description": "Get endpoint to retrieve an Address for an entity"
					},
					"response": []
				},
				{
					"name": "Get Customer Addresses",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/addresses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"addresses"
							]
						},
						"description": "Get endpoint to retrieve all Addresses for an entity"
					},
					"response": []
				},
				{
					"name": "Update Customer Address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"AddressLine1\": \"{{$randomStreetAddress}}\",\r\n    \"AddressLine2\": \"{{$randomStreetName}}\",\r\n    \"Province\": \"{{$randomCountry}}\",\r\n    \"City\": \"{{$randomCity}}\",\r\n    \"Suburb\": \"{{Suburb}}\",\r\n    \"PostCode\": \"{{PostCode}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/addresses/{{addressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"addresses",
								"{{addressId}}"
							]
						},
						"description": "Patch endpoint to update an Address for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Addresses (Employee)",
			"item": [
				{
					"name": "Create Employee Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"addressId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"addressId\"));\r",
									"\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "//Person Address\r\n\r\n{\r\n    \"Name\": \"{{$randomFullName}}\",\r\n    \"AddressTypes\": [\r\n        {\r\n            \"Id\": \"{{addType_Person}}\"\r\n        }\r\n    ],\r\n    \"AddressLine1\": \"{{$randomStreetAddress}}\",\r\n    \"AddressLine2\": \"{{$randomStreetName}}\",\r\n    \"Province\": \"{{$randomCountry}}\",\r\n    \"City\": \"{{$randomCity}}\",\r\n    \"Suburb\": \"{{Suburb}}\",\r\n    \"PostCode\": \"{{PostCode}}\",\r\n    \"CountryCode\": \"{{CountryCode}}\",\r\n    \"Locale\": {\r\n        \"Id\": \"{{addLocale}}\"\r\n    }\r\n}\r\n\r\n\r\n//// Business Address\r\n// {\r\n//     \"Name\": \"{{$randomFullName}}\",\r\n//     \"AddressTypes\": [\r\n//         {\r\n//             \"Id\": \"{{addType_Business}}\"\r\n//         }\r\n//     ],\r\n//     \"AddressLine1\": \"{{$randomStreetAddress}}\",\r\n//     \"AddressLine2\": \"{{$randomStreetName}}\",\r\n//     \"Province\": \"{{$randomCountry}}\",\r\n//     \"City\": \"{{$randomCity}}\",\r\n//     \"Suburb\": \"{{Suburb}}\",\r\n//     \"PostCode\": \"{{PostCode}}\",\r\n//     \"CountryCode\": \"{{CountryCode}}\",\r\n//     \"Locale\": {\r\n//         \"Id\": \"{{addLocale}}\"\r\n//     }\r\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/addresses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"addresses"
							]
						},
						"description": "Post endpoint to create an Address for an entity"
					},
					"response": []
				},
				{
					"name": "Create Employee Link Address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"AddressTypes\": [ {\r\n        \"Id\":\"f911182a-e519-667d-b0f0-285523926199\"\r\n    } ],\r\n    \"Address\":{\r\n        \"Id\":\"2d7eaced-19b0-3830-b5ab-7782937b524a\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/addresses/link-address",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"addresses",
								"link-address"
							]
						},
						"description": "Post endpoint to create a link to an Address for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Employee Address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/addresses/{{addressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"addresses",
								"{{addressId}}"
							]
						},
						"description": "Delete endpoint to remove an Address from an entity"
					},
					"response": []
				},
				{
					"name": "Get Employee Address by Id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/addresses/{{addressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"addresses",
								"{{addressId}}"
							]
						},
						"description": "Get endpoint to retrieve an Address for an entity"
					},
					"response": []
				},
				{
					"name": "Get Employee Addresses",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/addresses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"addresses"
							]
						},
						"description": "Get endpoint to retrieve all Addresses for an entity"
					},
					"response": []
				},
				{
					"name": "Update Employee Address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"AddressLine1\": \"{{$randomStreetAddress}}\",\r\n    \"AddressLine2\": \"{{$randomStreetName}}\",\r\n    \"Province\": \"{{$randomCountry}}\",\r\n    \"City\": \"{{$randomCity}}\",\r\n    \"Suburb\": \"{{Suburb}}\",\r\n    \"PostCode\": \"{{PostCode}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/addresses/{{addressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"addresses",
								"{{addressId}}"
							]
						},
						"description": "Patch endpoint to update an Address for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Addresses (Supplier)",
			"item": [
				{
					"name": "Create Supplier Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"addressId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"addressId\"));\r",
									"\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "//Person Address\r\n\r\n{\r\n    \"Name\": \"{{$randomFullName}}\",\r\n    \"AddressTypes\": [\r\n        {\r\n            \"Id\": \"{{addType_Person}}\"\r\n        }\r\n    ],\r\n    \"AddressLine1\": \"{{$randomStreetAddress}}\",\r\n    \"AddressLine2\": \"{{$randomStreetName}}\",\r\n    \"Province\": \"{{$randomCountry}}\",\r\n    \"City\": \"{{$randomCity}}\",\r\n    \"Suburb\": \"{{Suburb}}\",\r\n    \"PostCode\": \"{{PostCode}}\",\r\n    \"CountryCode\": \"{{CountryCode}}\",\r\n    \"Locale\": {\r\n        \"Id\": \"{{addLocale}}\"\r\n    }\r\n}\r\n\r\n\r\n//// Business Address\r\n// {\r\n//     \"Name\": \"{{$randomFullName}}\",\r\n//     \"AddressTypes\": [\r\n//         {\r\n//             \"Id\": \"{{addType_Business}}\"\r\n//         }\r\n//     ],\r\n//     \"AddressLine1\": \"{{$randomStreetAddress}}\",\r\n//     \"AddressLine2\": \"{{$randomStreetName}}\",\r\n//     \"Province\": \"{{$randomCountry}}\",\r\n//     \"City\": \"{{$randomCity}}\",\r\n//     \"Suburb\": \"{{Suburb}}\",\r\n//     \"PostCode\": \"{{PostCode}}\",\r\n//     \"CountryCode\": \"{{CountryCode}}\",\r\n//     \"Locale\": {\r\n//         \"Id\": \"{{addLocale}}\"\r\n//     }\r\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/addresses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"addresses"
							]
						},
						"description": "Post endpoint to create an Address for an entity"
					},
					"response": []
				},
				{
					"name": "Create Supplier Link Address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"AddressTypes\": [ {\r\n        \"Id\":\"f911182a-e519-667d-b0f0-285523926199\"\r\n    } ],\r\n    \"Address\":{\r\n        \"Id\":\"2d7eaced-19b0-3830-b5ab-7782937b524a\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/addresses/link-address",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"addresses",
								"link-address"
							]
						},
						"description": "Post endpoint to create a link to an Address for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Supplier Address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/addresses/{{addressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"addresses",
								"{{addressId}}"
							]
						},
						"description": "Delete endpoint to remove an Address from an entity"
					},
					"response": []
				},
				{
					"name": "Get Supplier Address by Id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/addresses/{{addressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"addresses",
								"{{addressId}}"
							]
						},
						"description": "Get endpoint to retrieve an Address for an entity"
					},
					"response": []
				},
				{
					"name": "Get Supplier Addresses",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/addresses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"addresses"
							]
						},
						"description": "Get endpoint to retrieve all Addresses for an entity"
					},
					"response": []
				},
				{
					"name": "Update Supplier Address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"AddressLine1\": \"{{$randomStreetAddress}}\",\r\n    \"AddressLine2\": \"{{$randomStreetName}}\",\r\n    \"Province\": \"{{$randomCountry}}\",\r\n    \"City\": \"{{$randomCity}}\",\r\n    \"Suburb\": \"{{Suburb}}\",\r\n    \"PostCode\": \"{{PostCode}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/addresses/{{addressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"addresses",
								"{{addressId}}"
							]
						},
						"description": "Patch endpoint to update an Address for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Bank Accounts (Client)",
			"item": [
				{
					"name": "Create Client Bank Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"bankAccountId\",pm.response.json().Id);\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"{{name}}\",\r\n    \"BranchCode\": \"{{BranchCode}}\",\r\n    \"AccountNumber\": \"{{AccountNumber}}\",\r\n    \"IBan\": \"{{IBan}}\",\r\n    \"BicSwift\": \"{{BicSwift}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/bank-accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"bank-accounts"
							]
						},
						"description": "Post endpoint to create an Address for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Client Bank Account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/bank-accounts/{{bankAccountId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"bank-accounts",
								"{{bankAccountId}}"
							]
						},
						"description": "Delete endpoint to remove an Address from an entity"
					},
					"response": []
				},
				{
					"name": "Get Client Bank Accounts By Id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/bank-accounts/{{bankAccountId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"bank-accounts",
								"{{bankAccountId}}"
							]
						},
						"description": "Get endpoint to retrieve all Addresses for an entity"
					},
					"response": []
				},
				{
					"name": "Get Client Bank Accounts",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/bank-accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"bank-accounts"
							]
						},
						"description": "Get endpoint to retrieve all Addresses for an entity"
					},
					"response": []
				},
				{
					"name": "Update Client Bank Account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "  {\r\n            \"Name\": \"{{Lname}}\",\r\n            \"BranchCode\": \"{{BranchCode1}}\",\r\n            \"AccountNumber\": \"{{AccountNumber1}}\",\r\n            \"IBan\": \"{{IBan1}}\",\r\n            \"BicSwift\": \"{{BicSwift1}}\"\r\n        }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/bank-accounts/{{bankAccountId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"bank-accounts",
								"{{bankAccountId}}"
							]
						},
						"description": "Patch endpoint to update an Address for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Bank Accounts (Customer)",
			"item": [
				{
					"name": "Create Customer Bank Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"bankAccountId\",pm.response.json().Id);\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"{{name}}\",\r\n    \"BranchCode\": \"{{BranchCode}}\",\r\n    \"AccountNumber\": \"{{AccountNumber}}\",\r\n    \"IBan\": \"{{IBan}}\",\r\n    \"BicSwift\": \"{{BicSwift}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/bank-accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"bank-accounts"
							]
						},
						"description": "Post endpoint to create an Address for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Customer Bank Account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/bank-accounts/{{bankAccountId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"bank-accounts",
								"{{bankAccountId}}"
							]
						},
						"description": "Delete endpoint to remove an Address from an entity"
					},
					"response": []
				},
				{
					"name": "Get Customer Bank Accounts By Id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/bank-accounts/{{bankAccountId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"bank-accounts",
								"{{bankAccountId}}"
							]
						},
						"description": "Get endpoint to retrieve all Addresses for an entity"
					},
					"response": []
				},
				{
					"name": "Get Customer Bank Accounts",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/bank-accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"bank-accounts"
							]
						},
						"description": "Get endpoint to retrieve all Addresses for an entity"
					},
					"response": []
				},
				{
					"name": "Update Customer Bank Account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"{{Lname}}\",\r\n    \"BranchCode\": \"{{BranchCode1}}\",\r\n    \"AccountNumber\": \"{{AccountNumber1}}\",\r\n    \"IBan\": \"{{IBan1}}\",\r\n    \"BicSwift\": \"{{BicSwift1}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/bank-accounts/{{bankAccountId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"bank-accounts",
								"{{bankAccountId}}"
							]
						},
						"description": "Patch endpoint to update an Address for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Bank Accounts (Employee)",
			"item": [
				{
					"name": "Create Entity Employee Bank Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"bankAccountId\",pm.response.json().Id);\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"{{name}}\",\r\n    \"BranchCode\": \"{{BranchCode}}\",\r\n    \"AccountNumber\": \"{{AccountNumber}}\",\r\n    \"IBan\": \"{{IBan}}\",\r\n    \"BicSwift\": \"{{BicSwift}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/bank-accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"bank-accounts"
							]
						},
						"description": "Post endpoint to create an Address for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Employee Bank Account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/bank-accounts/{{bankAccountId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"bank-accounts",
								"{{bankAccountId}}"
							]
						},
						"description": "Delete endpoint to remove an Address from an entity"
					},
					"response": []
				},
				{
					"name": "Get Employee Bank Accounts By Id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/bank-accounts/{{bankAccountId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"bank-accounts",
								"{{bankAccountId}}"
							]
						},
						"description": "Get endpoint to retrieve all Addresses for an entity"
					},
					"response": []
				},
				{
					"name": "Get Employee Bank Accounts",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/bank-accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"bank-accounts"
							]
						},
						"description": "Get endpoint to retrieve all Addresses for an entity"
					},
					"response": []
				},
				{
					"name": "Update Employee Bank Account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"{{Lname}}\",\r\n    \"BranchCode\": \"{{BranchCode1}}\",\r\n    \"AccountNumber\": \"{{AccountNumber1}}\",\r\n    \"IBan\": \"{{IBan1}}\",\r\n    \"BicSwift\": \"{{BicSwift1}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/bank-accounts/{{bankAccountId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"bank-accounts",
								"{{bankAccountId}}"
							]
						},
						"description": "Patch endpoint to update an Address for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Bank Accounts (Supplier)",
			"item": [
				{
					"name": "Create Supplier Bank Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"bankAccountId\",pm.response.json().Id);\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"{{name}}\",\r\n    \"BranchCode\": \"{{BranchCode}}\",\r\n    \"AccountNumber\": \"{{AccountNumber}}\",\r\n    \"IBan\": \"{{IBan}}\",\r\n    \"BicSwift\": \"{{BicSwift}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/bank-accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"bank-accounts"
							]
						},
						"description": "Post endpoint to create an Address for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Supplier Bank Account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/bank-accounts/{{bankAccountId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"bank-accounts",
								"{{bankAccountId}}"
							]
						},
						"description": "Delete endpoint to remove an Address from an entity"
					},
					"response": []
				},
				{
					"name": "Get Supplier Bank Accounts By Id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/bank-accounts/{{bankAccountId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"bank-accounts",
								"{{bankAccountId}}"
							]
						},
						"description": "Get endpoint to retrieve all Addresses for an entity"
					},
					"response": []
				},
				{
					"name": "Get Supplier Bank Accounts",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/bank-accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"bank-accounts"
							]
						},
						"description": "Get endpoint to retrieve all Addresses for an entity"
					},
					"response": []
				},
				{
					"name": "Update Supplier Bank Account",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"{{Lname}}\",\r\n    \"BranchCode\": \"{{BranchCode1}}\",\r\n    \"AccountNumber\": \"{{AccountNumber1}}\",\r\n    \"IBan\": \"{{IBan1}}\",\r\n    \"BicSwift\": \"{{BicSwift1}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/bank-accounts/{{bankAccountId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"bank-accounts",
								"{{bankAccountId}}"
							]
						},
						"description": "Patch endpoint to update an Address for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Clients V2",
			"item": [
				{
					"name": "Create Client v2 person",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" // set this delay when running script to create multiple clients\r",
									" let moment = require(\"moment\")\r",
									"  console.log(\"before:\", moment())\r",
									"\r",
									"  setTimeout(function () { console.log(\"after:\", moment()) }, 500)\r",
									"\r",
									"\r",
									"// This variable we can use it to test the limit in user assignment 200.Please see the Tests section for the further script.\r",
									"pm.variables.set(\"retryCount\",199)\r",
									" "
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"clientId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"clientId\"));\r",
									"\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}\r",
									"\r",
									"/*\r",
									"- Use Below script to create 200 clients . set the no. of client to be created in pre-request-script before executing this.\r",
									"- This script will create no. of clients mentioned in the pre-request and assign those to unique Gloabl variable.\r",
									"- Below script can be executed In Collection Runner. Once script is done...\r",
									"- click on ERM TEST Folder -> Collection Runner.\r",
									"- From Collection runner select the test in which below script is placed. (unselect all other)\r",
									"- Click on Run ERM Tests\r",
									"\r",
									"Note - Before running this uncomment below section :) line number 26\r",
									"\r",
									"\r",
									"AFter Execution - After executing the below script we need to use the all the variables created for clientID in the request\r",
									"*/\r",
									"\r",
									"\r",
									"/*\r",
									"pm.variables.get(\"retryCounter\") === undefined ? pm.variables.set('retryCounter', pm.variables.get(\"retryCount\")) : null\r",
									"retryCount = pm.variables.get(\"retryCounter\");\r",
									"console.log(retryCount)\r",
									"\r",
									"if (retryCount >= 1) {\r",
									"    postman.setNextRequest(pm.info.requestName);\r",
									"         pm.globals.set(\"cid\"+retryCount,pm.response.json().Id);\r",
									"             pm.variables.set('retryCounter', --retryCount)\r",
									"\r",
									"console.log(retryCount)\r",
									"\r",
									"}\r",
									"\r",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Name\": \"{{$randomFullName}}\",\n    \"ClientCode\": \"{{ClientCode}}\",\n    // Enable this after creating folder\n    // \"Folder\": {\n    //     \"Id\": \"{{folderId}}\"\n    // },\n    \"IsProspect\": false,\n    \"EngagementLetterSigned\": \"{{$isoTimestamp}}\",\n    \"EngagementLetterIssued\": \"{{$isoTimestamp}}\",\n    \"SubType\": {\n        \"Id\": \"{{defaultPersonSubType}}\"\n    },\n    \"SubTypeProperties\": \"{}\",\n    \"OrgServiceBusinessId\": \"{{$guid}}\",\n    \"Website\": \"{{$randomProtocol}}://{{$randomDomainName}}\",\n    \"IsTaxRegistered\": true,\n    /*\"TaxScheme\": {\n     \"Id\": \"{{Is there an existing tax xscheme Id we can use?}}\"\n},*/\n    \"DateOfTaxRegistration\": \"{{$isoTimestamp}}\",\n    \"TaxNumber\": \"{{txNumber}}\",\n    \"CountryOfRegistration\": \"{{country_of_registration}}\",\n    \"CountryCode\": \"{{Alpha3_Country_Code}}\",\n    \"Person\": {\n        \"Title\": \"{{$randomNamePrefix}}\",\n        \"FirstNames\": \"{{$randomFirstName}}\",\n        \"MiddleNames\": \"{{name}}\",\n        \"LastNames\": \"{{$randomLastName}}\",\n        \"KnownAs\": \"{{$randomJobTitle}}\",\n        \"Suffixes\": \"{{$randomNameSuffix}}\",\n        \"DateOfBirth\": \"{{$isoTimestamp}}\"\n        // ,\n        //\"OrgServiceUserId\": \"Can only be supplied from OrgService\",\n    }\n    ,\n    \"Addresses\": [\n        {\n            \"AddressTypes\": [\n                {\n                    \"Id\": \"{{addType_Person}}\"\n                }\n            ],\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"Locale\": {\n                \"Id\": \"{{addLocale}}\"\n            }\n        },\n        {\n            \"AddressTypes\": [\n                {\n                    \"Id\": \"{{addType_Person}}\"\n                }\n            ],\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"Province\": \"{{$randomCountry}}\",\n            \"City\": \"{{$randomCity}}\",\n            \"Suburb\": \"{{Suburb}}\",\n            \"PostCode\": \"{{PostCode}}\",\n            \"Name\": \"{{$randomFullName}}\",\n            \"CountryCode\": \"{{CountryCode}}\",\n            \"Locale\": {\n                \"Id\": \"{{addLocale}}\"\n            }\n        }\n    ],\n    \"AdditionalRegistrationNumbers\": [\n        {\n            \"RegistrationNumberType\": {\n                \"Id\": \"{{regnumtypevat}}\"\n            },\n            \"RegistrationNumber\": \"0987654321\"\n        }\n    ],\n    \"PhoneNumbers\": [\n        {\n            \"PhoneNumberType\": {\n                \"Id\": \"{{phoneType_Person}}\"\n            },\n            \"Number\": \"{{phoneNumber1}}\",\n            \"IsMainNumber\": false\n        },\n        {\n            \"PhoneNumberType\": {\n                \"Id\": \"{{phoneType_Person}}\"\n            },\n            \"Number\": \"{{phoneNumber}}\",\n            \"IsMainNumber\": true\n        }\n    ],\n    \"EmailAddresses\": [\n        {\n            \"EmailType\": {\n                \"Id\": \"{{emailType_Person}}\"\n            },\n            \"EmailAddress\": \"{{emailAdd}}\",\n            \"IsMainEmail\": false\n        },\n        {\n            \"EmailType\": {\n                \"Id\": \"{{emailType_Person}}\"\n            },\n            \"EmailAddress\": \"{{emailAdd1}}\",\n            \"IsMainEmail\": true\n        }\n    ]\n    // ,\n    //    \"External\": {\n    //     \"Id\": \"{{$guid}}\",\n    //     \"Source\": \"external product A\"\n    // }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients"
							]
						},
						"description": "Post endpoint to create a new Client container for a tenant"
					},
					"response": []
				},
				{
					"name": "Create Client v2 Business",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" // set this delay when running script to create multiple clients\r",
									" let moment = require(\"moment\")\r",
									"  console.log(\"before:\", moment())\r",
									"\r",
									"  setTimeout(function () { console.log(\"after:\", moment()) }, 500)\r",
									"\r",
									"// This variable we can use it to test the limit in user assignment 200.Please see the Tests section for the further script.\r",
									"pm.variables.set(\"retryCount\",199)\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"clientId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"clientId\"));\r",
									"\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}\r",
									"\r",
									"\r",
									"/*\r",
									"- Use Below script to create 200 clients . set the no. of client to be created in pre-request-script before executing this.\r",
									"- This script will create no. of clients mentioned in the pre-request and assign those to unique Gloabl variable.\r",
									"- Below script can be executed In Collection Runner. Once script is done...\r",
									"- click on ERM TEST Folder -> Collection Runner.\r",
									"- From Collection runner select the test in which below script is placed. (unselect all other)\r",
									"- Click on Run ERM Tests\r",
									"\r",
									"Note - Before running this uncomment below section :) line number 26\r",
									"\r",
									"\r",
									"AFter Execution - After executing the below script we need to use the all the variables created for clientID in the request\r",
									"*/\r",
									"\r",
									"/*\r",
									"\r",
									"pm.variables.get(\"retryCounter\") === undefined ? pm.variables.set('retryCounter', pm.variables.get(\"retryCount\")) : null\r",
									"retryCount = pm.variables.get(\"retryCounter\");\r",
									"console.log(retryCount)\r",
									"\r",
									"if (retryCount >= 1) {\r",
									"    postman.setNextRequest(pm.info.requestName);\r",
									"         pm.globals.set(\"cid\"+retryCount,pm.response.json().Id);\r",
									"             pm.variables.set('retryCounter', --retryCount)\r",
									"\r",
									"console.log(retryCount)\r",
									"\r",
									"}\r",
									"\r",
									"\r",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Name\": \"{{$randomFullName}}\",\n    \"ClientCode\": \"{{ClientCode}}\",\n    // Enable this after creating folder\n    // \"Folder\": {\n    //     \"Id\": \"{{folderId}}\"\n    // },\n    \"IsProspect\": false,\n    \"EngagementLetterSigned\": \"{{$isoTimestamp}}\",\n    \"EngagementLetterIssued\": \"{{$isoTimestamp}}\",\n    \"SubType\": {\n        \"Id\": \"{{defaultBusinessSubType}}\"\n    },\n    \"SubTypeProperties\": \"{}\",\n    \"ContractRenewal\": \"{{$isoTimestamp}}\",\n    \"OrgServiceBusinessId\": \"{{$guid}}\",\n    \"Website\": \"{{$randomProtocol}}://{{$randomDomainName}}\",\n    \"IsTaxRegistered\": true,\n    /*\"TaxScheme\": {\n     \"Id\": \"{{Is there an existing tax xscheme Id we can use?}}\"\n},*/\n    \"DateOfTaxRegistration\": \"{{$isoTimestamp}}\",\n    \"TaxNumber\": \"{{txNumber}}\",\n    \"CountryOfRegistration\": \"{{country_of_registration}}\",\n    \"CountryCode\": \"{{Alpha3_Country_Code}}\",\n    \"Business\": {\n        \"TradingName\": \"{{$randomCompanyName}}\",\n        \"RegisteredName\": \"{{$randomBs}}\",\n        \"DateOfRegistration\": \"{{$isoTimestamp}}\",\n        \"DateTradingCommenced\": \"{{$isoTimestamp}}\",\n        \"DateTradingCeased\": \"{{$isoTimestamp}}\",\n        \"FinancialYearEnd\": {\n            \"Day\": \"{{todaydate}}\",\n            \"Month\": \"{{month}}\"\n        }\n    },\n    \"Addresses\": [\n        {\n            \"AddressTypes\": [\n                {\n                    \"Id\": \"{{addType_Business}}\"\n                }\n            ],\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"Locale\": {\n                \"Id\": \"{{addLocale}}\"\n            }\n        },\n        {\n            \"AddressTypes\": [\n                {\n                    \"Id\": \"{{addType_Business}}\"\n                }\n            ],\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"Province\": \"{{$randomCountry}}\",\n            \"City\": \"{{$randomCity}}\",\n            \"Suburb\": \"{{Suburb}}\",\n            \"PostCode\": \"{{PostCode}}\",\n            \"Name\": \"{{$randomFullName}}\",\n            \"CountryCode\": \"{{CountryCode}}\",\n            \"Locale\": {\n                \"Id\": \"{{addLocale}}\"\n            }\n        }\n    ],\n    \"AdditionalRegistrationNumbers\": [\n        {\n            \"RegistrationNumberType\": {\n                \"Id\": \"{{RegNum_Business}}\"\n            },\n            \"RegistrationNumber\": \"1234567890\"\n        },\n        {\n            \"RegistrationNumberType\": {\n                \"Id\": \"{{RegNum_Additional}}\"\n            },\n            \"RegistrationNumber\": \"0987654321\"\n        }\n    ],\n    \"PhoneNumbers\": [\n        {\n            \"PhoneNumberType\": {\n                \"Id\": \"{{phoneType_Business}}\"\n            },\n            \"Number\": \"{{phoneNumber1}}\",\n            \"IsMainNumber\": false\n        },\n        {\n            \"PhoneNumberType\": {\n                \"Id\": \"{{phoneType_Business}}\"\n            },\n            \"Number\": \"{{phoneNumber}}\",\n            \"IsMainNumber\": true\n        }\n    ],\n    \"EmailAddresses\": [\n        {\n            \"EmailType\": {\n                \"Id\": \"{{emailType_Business}}\"\n            },\n            \"EmailAddress\": \"{{emailAdd}}\",\n            \"IsMainEmail\": false\n        },\n        {\n            \"EmailType\": {\n                \"Id\": \"{{emailType_Business}}\"\n            },\n            \"EmailAddress\": \"{{emailAdd1}}\",\n            \"IsMainEmail\": true\n        }\n    ]\n    // ,\n    //    \"External\": {\n    //     \"Id\": \"{{$guid}}\",\n    //     \"Source\": \"external product A\"\n    // }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients"
							]
						},
						"description": "Post endpoint to create a new Client container for a tenant"
					},
					"response": []
				},
				{
					"name": "Convert Client to Contact",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"contactId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"contactId\"));\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"ContactCode\": \"{{ContactCode}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/to-contact",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"to-contact"
							]
						},
						"description": "Post endpoint to create a contact from the specified client."
					},
					"response": []
				},
				{
					"name": "Assign User to Client",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"UserIds\": [ \n        { \"Id\": \"C1CF0B29-49FC-4E6B-A607-C5A569334FF7\" }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/users/assign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"users",
								"assign"
							]
						},
						"description": "Post endpoint to assign the provided list of users to the given client."
					},
					"response": []
				},
				{
					"name": "Unassign User from Client",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"UserIds\": [ \n        { \"Id\": \"C1CF0B29-49FC-4E6B-A607-C5A569334FF7\" }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/users/unassign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"users",
								"unassign"
							]
						},
						"description": "Post endpoint to remove the provided list of users from access to the given client."
					},
					"response": []
				},
				{
					"name": "Move Client Folder",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t//\"Name\": \"Example\",\n\t\"Id\": \"{{folderId}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/move-folder",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"move-folder"
							]
						},
						"description": "Post endpoint to change the folder that the given client is held within."
					},
					"response": []
				},
				{
					"name": "Activate ClientV2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/activate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"activate"
							]
						},
						"description": "Post endpoint to set the isActive flag to true on the provided client."
					},
					"response": []
				},
				{
					"name": "Dectivate ClientV2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/de-activate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"de-activate"
							]
						},
						"description": "Post endpoint to set the isActive flag to false on the provided client."
					},
					"response": []
				},
				{
					"name": "Change ClientV2 Subtype",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"SubType\": {\n\t\t\"Id\": \"{{defaultPersonSubType}}\"\n\t},\n\t\"SubTypeProperties\": \"{}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/change-subtype",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"change-subtype"
							]
						},
						"description": "Post endpoint to change the Sub-Type of the given Client."
					},
					"response": []
				},
				{
					"name": "Delete Client v2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}"
							]
						},
						"description": "Delete endpoint to remove a Client container"
					},
					"response": []
				},
				{
					"name": "Get all Clients v2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients"
							]
						},
						"description": "Get endpoint to return all Client container entities for a tenant"
					},
					"response": []
				},
				{
					"name": "Get Client By Id v2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}?$expand=Addresses,EmailAddresses,PhoneNumbers,AdditionalRegistrationNumbers,Relationships,Dimensions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}"
							],
							"query": [
								{
									"key": "$expand",
									"value": "Addresses,EmailAddresses,PhoneNumbers,AdditionalRegistrationNumbers,Relationships,Dimensions"
								}
							]
						},
						"description": "Get endpoint to return a single Client container belonging to a tenant"
					},
					"response": []
				},
				{
					"name": "Get Client Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"users"
							]
						},
						"description": "Get endpoint to return the list of users who have explicit access to this client."
					},
					"response": []
				},
				{
					"name": "Update Client v2  Business",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Name\": \"{{$randomFullName}}\",\n    \"ClientCode\": \"{{ClientCode}}\",\n    \"IsProspect\": false,\n    \"EngagementLetterSigned\": \"{{$isoTimestamp}}\",\n    \"EngagementLetterIssued\": \"{{$isoTimestamp}}\",\n    \"SubTypeProperties\": \"{}\",\n    \"OrgServiceBusinessId\": \"{{$guid}}\",\n    \"Website\": \"{{$randomProtocol}}://{{$randomDomainName}}\",\n    \"IsTaxRegistered\": true,\n    \"ContractRenewal\": \"{{$isoTimestamp}}\",\n    // \"InactiveDate\": {{$isoTimestamp}},\n    /*\"TaxScheme\": {\n     \"Id\": \"{{Is there an existing tax xscheme Id we can use?}}\"\n},*/\n    \"DateOfTaxRegistration\": \"{{$isoTimestamp}}\",\n    \"TaxNumber\": \"{{txNumber}}\",\n    \"CountryOfRegistration\": \"{{country_of_registration}}\",\n    \"CountryCode\": \"{{Alpha3_Country_Code}}\",\n    \"Business\": {\n        \"TradingName\": \"{{$randomCompanyName}}\",\n        \"RegisteredName\": \"{{$randomBs}}\",\n        \"DateOfRegistration\": \"{{$isoTimestamp}}\",\n        \"DateTradingCommenced\": \"{{$isoTimestamp}}\",\n        \"DateTradingCeased\": \"{{$isoTimestamp}}\",\n        \"FinancialYearEnd\": {\n            \"Day\": \"{{todaydate}}\",\n            \"Month\": \"{{month}}\"\n        }\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}"
							],
							"query": [
								{
									"key": "$expand",
									"value": "Addresses,EmailAddresses,PhoneNumbers,AdditionalRegistrationNumbers,Relationships,Dimensions",
									"disabled": true
								}
							]
						},
						"description": "Post endpoint to update the specified client"
					},
					"response": []
				},
				{
					"name": "Update Client v2  Person",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Name\": \"{{$randomFullName}}\",\n    \"ClientCode\": \"{{ClientCode}}\",\n    \"IsProspect\": false,\n    \"EngagementLetterSigned\": \"{{$isoTimestamp}}\",\n    \"EngagementLetterIssued\": \"{{$isoTimestamp}}\",\n    \"SubTypeProperties\": \"{}\",\n    \"OrgServiceBusinessId\": \"{{$guid}}\",\n    \"Website\": \"{{$randomProtocol}}://{{$randomDomainName}}\",\n    \"IsTaxRegistered\": true,\n    \"ContractRenewal\": \"{{$isoTimestamp}}\",\n    // \"InactiveDate\": {{$isoTimestamp}},\n    /*\"TaxScheme\": {\n     \"Id\": \"{{Is there an existing tax xscheme Id we can use?}}\"\n},*/\n    \"DateOfTaxRegistration\": \"{{$isoTimestamp}}\",\n    \"TaxNumber\": \"{{txNumber}}\",\n    \"CountryOfRegistration\": \"{{country_of_registration}}\",\n    \"CountryCode\": \"{{Alpha3_Country_Code}}\",\n    \"Person\": {\n        \"Title\": \"{{$randomNamePrefix}}\",\n        \"FirstNames\": \"{{$randomFirstName}}\",\n        \"MiddleNames\": \"{{name}}\",\n        \"LastNames\": \"{{$randomLastName}}\",\n        \"KnownAs\": \"{{$randomJobTitle}}\",\n        \"Suffixes\": \"{{$randomNameSuffix}}\",\n        \"DateOfBirth\": \"{{$isoTimestamp}}\"\n        // ,\n        //\"OrgServiceUserId\": \"Can only be supplied from OrgService\",\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}?$expand=Addresses,EmailAddresses,PhoneNumbers,AdditionalRegistrationNumbers,Relationships,Dimensions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}"
							],
							"query": [
								{
									"key": "$expand",
									"value": "Addresses,EmailAddresses,PhoneNumbers,AdditionalRegistrationNumbers,Relationships,Dimensions"
								}
							]
						},
						"description": "Post endpoint to update the specified client"
					},
					"response": []
				},
				{
					"name": "Convert Prospect to Client",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{    \n    \n    \"Folder\": {\n        //run create folder test to use folderid  and create is prospect client\n        // \"Id\": \"{{folderId}}\" \n        \"Name\": \"{{$randomFullName}}\"\n    }\n    \n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/convert-prospect-to-client",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"convert-prospect-to-client"
							]
						},
						"description": "Post endpoint to create a new Client container for a tenant"
					},
					"response": []
				},
				{
					"name": "Set Client Authority Delegated",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"AuthorityDelegated\": \"Authorised\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/authority-delegated",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"authority-delegated"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reset Authority Delegated",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/reset-authority-delegated",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"reset-authority-delegated"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var ClientCode = [\"RK\", \"JH\", \"SM\", \"CK\"]",
							"pm.collectionVariables.set(\"ClientCode\", ClientCode[_.random(ClientCode.length -1)]+_.random(10, 99));",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Contacts",
			"item": [
				{
					"name": "Create Contact Person",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"contactId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"contactId\"));\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Name\": \"{{$randomFullName}}\",\n    \"ContactCode\": \"{{contactCode}}\",\n    \"SubType\": {\n        \"Id\": \"{{defaultPersonSubType}}\" // change to defaultBusinessSubType when creating a client business\n    },\n    \"SubTypeProperties\": \"{ \\\"PropertyA\\\": 100, \\\"PropertyB\\\": \\\"Limited\\\" }\",\n    \"Website\": \"{{$randomProtocol}}://{{$randomDomainName}}\",\n    \"Person\": {\n        \"Title\": \"{{$randomNamePrefix}}\",\n        \"FirstNames\": \"{{$randomFirstName}}\",\n        \"MiddleNames\": \"{{name}}\",\n        \"LastNames\": \"{{$randomLastName}}\",\n        \"KnownAs\": \"{{$randomJobTitle}}\",\n        \"Suffixes\": \"{{$randomNameSuffix}}\",\n        \"DateOfBirth\": \"{{$isoTimestamp}}\"\n    },\n    /*\"Business\" : {\n\"TradingName\": \"Wonder Woman Inc.\",\n\"RegisteredName\": \"Wonder Woman\",\n},*/\n    \"Addresses\": [\n        {\n            \"AddressTypes\": [\n                {\n                    \"Id\": \"{{addType_Person}}\"\n                }\n            ],\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"Locale\": {\n                \"Id\": \"{{addLocale}}\"\n            }\n        },\n        {\n            \"AddressTypes\": [\n                {\n                    \"Id\": \"{{addType_Person}}\"\n                }\n            ],\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"Province\": \"{{$randomCountry}}\",\n            \"City\": \"{{$randomCity}}\",\n            \"Suburb\": \"{{Suburb}}\",\n            \"PostCode\": \"{{PostCode}}\",\n            \"Name\": \"{{$randomFullName}}\",\n            \"CountryCode\": \"{{CountryCode}}\",\n            \"Locale\": {\n                \"Id\": \"{{addLocale}}\"\n            }\n        }\n    ],\n    /*\"LinkedAddresses\": [\n{\n\"AddressTypes\": [\n{ \"Id\": \"1a320fcf-4a77-4f24-96c6-49f85c0b444f\" } // business address type change to 53d4da4b-752f-d103-347d-72f2bb305882\n],\n\"Address\": {\n\"Id\": \"{{addressId}}\"\n}\n}\n],*/\n    \"AdditionalRegistrationNumbers\": [\n        {\n            \"RegistrationNumberType\": {\n                \"Id\": \"{{regnumtype}}\"\n            },\n            \"RegistrationNumber\": \"1234567890\"\n        },\n        {\n            \"RegistrationNumberType\": {\n                \"Id\": \"{{regnumtypevat}}\"\n            },\n            \"RegistrationNumber\": \"0987654321\"\n        }\n    ],\n    \"PhoneNumbers\": [\n        {\n            \"PhoneNumberType\": {\n                \"Id\": \"{{phoneType_Person}}\"\n            },\n            \"Number\": \"{{phoneNumber1}}\",\n            \"IsMainNumber\": false\n        },\n        {\n            \"PhoneNumberType\": {\n                \"Id\": \"{{phoneType_Person}}\"\n            },\n            \"Number\": \"{{phoneNumber}}\",\n            \"IsMainNumber\": true\n        }\n    ],\n    \"EmailAddresses\": [\n        {\n            \"EmailType\": {\n                \"Id\": \"{{emailType_Person}}\"\n            },\n            \"EmailAddress\": \"{{emailAdd}}\",\n            \"IsMainEmail\": false\n        },\n        {\n            \"EmailType\": {\n                \"Id\": \"{{emailType_Person}}\"\n            },\n            \"EmailAddress\": \"{{emailAdd1}}\",\n            \"IsMainEmail\": true\n        }\n    ]\n    // ,\n    //    \"External\": {\n    //     \"Id\": \"{{$guid}}\",\n    //     \"Source\": \"external product A\"\n    // }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts"
							]
						},
						"description": "Post endpoint to create a new Contact"
					},
					"response": []
				},
				{
					"name": "Create Contact Business",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// const randInt = Math.floor((Math.random()*1000 +2));\r",
									"// pm.variables.set(\"phoneNumber1\", _.random(2,12345678901));\r",
									"// pm.variables.set(\"phoneNumber\",  _.random(2,12345678901));\r",
									"// pm.variables.set(\"txNumber\", _.random(6,12345678901));\r",
									"// pm.variables.set(\"cor\", \"United Kingdom\");\r",
									"// pm.variables.set(\"cc\", \"UKI\");\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"// var Suburb = [\"Blossomfield\", \"Bowesfield\", \"Cassiobury\", \"Farley Wood\", \"Redbridge, London\"]\r",
									"// var CountryCode = [\"UK\", \"PK\", \"PL\"]\r",
									"// var PostCode = [\"M33 7GG\", \"M22 AGG\", \"E16 JBL\"]\r",
									"\r",
									"// var name = [\"Kreza\", \"Scul\", \"Sanj\", \"Muzi\", \"Sahau\", \"Krisank\", \"Kasi\", \"Kush\", \"jsua\", \"Kasui\", \"Sirza\", \"Jackpol\",\"Siraj\",\"juniin\",\"Joain\"]\r",
									"// var Lname = [\"Kisnoi\", \"Singh\", \"Stuwart\", \"akhtar\", \"kumar\", \"das\", \"kishan\", \"brother\", \"khatai\", \"flintoff\", \"armstrong\", \"boom\",\"Siraj\"]\r",
									"\r",
									"// var contactcode = [\"RK\", \"JH\", \"SM\", \"CK\"]\r",
									"// var emilDomain = [\"gmail.com\", \"hotmail.com\", \"yahoo.com\", \"sage.com\", \"netflix.com\"]\r",
									"// var emailAdd = [\"Kreza\", \"Scul\", \"Sanj\", \"Muzi\", \"Sahau\", \"Krisank\", \"Kasi\", \"Kush\", \"jsua\", \"Kasui\", \"Sirza\", \"Jackpol\",\"Siraj\",\"juniin\",\"Joain\"]\r",
									"// var BicSwift = [\"ANTSGB2LXXX\", \"ANTSGB2LCHA\", \"ANTSGB2LDOC\", \"HGSLGB2LSET\"]\r",
									"\r",
									"// //IBAN\r",
									"// var CC = [\"GB\"]\r",
									"// pm.environment.set(\"CD\",  _.random(2,67));\r",
									"// var BC = [\"NWBK\", \"LOBK\", \"NJBK\", \"NWCK\"]\r",
									"// pm.environment.set(\"SC\", _.random(6,984563));\r",
									"// pm.environment.set(\"AC\", _.random(8,73456378));\r",
									"\r",
									"\r",
									"// pm.variables.set(\"name\", name[_.random(name.length -1)]);\r",
									"// pm.variables.set(\"Lname\", Lname[_.random(Lname.length -1)]);\r",
									"\r",
									"// pm.variables.set(\"contactcode\", contactcode[_.random(contactcode.length -1)]+randInt);\r",
									"\r",
									"// pm.variables.set(\"emailAdd\", emailAdd[_.random(emailAdd.length -1)]+randInt+\"@\"+emilDomain[_.random(emilDomain.length -1)]);\r",
									"// pm.variables.set(\"emailAdd1\",\"{{$randomEmail}}\");\r",
									"\r",
									"// pm.variables.set(\"BranchCode\", _.random(1,951)+randInt);\r",
									"// pm.variables.set(\"AccountNumber\", _.random(6,12345678)+randInt);\r",
									"// pm.variables.set(\"IBan\", \"{{$randomBankAccountIban}}\");\r",
									"\r",
									"// pm.variables.set(\"BicSwift\", BicSwift[_.random(BicSwift.length -1)]);\r",
									"\r",
									"// pm.variables.set(\"BranchCode1\", _.random(1,951)+randInt);\r",
									"// pm.variables.set(\"AccountNumber1\", \"{{$randomBankAccount}}\");\r",
									"// pm.variables.set(\"IBan1\", CC[_.random(CC.length -1)]+\"{{CD}}\"+BC[_.random(BC.length -1)]+\"{{SC}}\"+\"{{AC}}\");\r",
									"\r",
									"// pm.variables.set(\"BicSwift1\",\"{{$randomBankAccountBic}}\");\r",
									"\r",
									"// pm.variables.set(\"Suburb\",Suburb[_.random(Suburb.length -1)]);\r",
									"\r",
									"// pm.variables.set(\"PostCode\",PostCode[_.random(PostCode.length -1)]);\r",
									"\r",
									"// pm.variables.set(\"CountryCode\",CountryCode[_.random(CountryCode.length -1)]);\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"contactId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"contactId\"));\r",
									"\r",
									"  // do something\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"  //do something else\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Name\": \"{{$randomFullName}}\",\n    \"ContactCode\": \"{{contactcode}}\",\n    \"SubType\": {\n        \"Id\": \"{{defaultBusinessSubType}}\"\n    },\n    \"SubTypeProperties\": \"{ \\\"PropertyA\\\": 100, \\\"PropertyB\\\": \\\"Limited\\\" }\",\n    \"Website\": \"{{$randomProtocol}}://{{$randomDomainName}}\",\n    \"Business\": {\n        \"TradingName\": \"{{$randomCompanyName}}\",\n        \"RegisteredName\": \"{{$randomBs}}\"\n    },\n    \"Addresses\": [\n        {\n            \"AddressTypes\": [\n                {\n                    \"Id\": \"{{addType_Business}}\"\n                }\n            ],\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"Locale\": {\n                \"Id\": \"{{addLocale}}\"\n            }\n        },\n        {\n            \"AddressTypes\": [\n                {\n                    \"Id\": \"{{addType_Business}}\"\n                }\n            ],\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"Province\": \"{{$randomCountry}}\",\n            \"City\": \"{{$randomCity}}\",\n            \"Suburb\": \"{{Suburb}}\",\n            \"PostCode\": \"{{PostCode}}\",\n            \"Name\": \"{{$randomFullName}}\",\n            \"CountryCode\": \"{{CountryCode}}\",\n            \"Locale\": {\n                \"Id\": \"{{addLocale}}\"\n            }\n        }\n    ],\n    /*\"LinkedAddresses\": [\n{\n\"AddressTypes\": [\n{ \"Id\": \"1a320fcf-4a77-4f24-96c6-49f85c0b444f\" } // business address type change to 53d4da4b-752f-d103-347d-72f2bb305882\n],\n\"Address\": {\n\"Id\": \"{{addressId}}\"\n}\n}\n],*/\n \n    \"PhoneNumbers\": [\n        {\n            \"PhoneNumberType\": {\n                \"Id\": \"{{phoneType_Business}}\"\n            },\n            \"Number\": \"{{phoneNumber1}}\",\n            \"IsMainNumber\": false\n        },\n        {\n            \"PhoneNumberType\": {\n                \"Id\": \"{{phoneType_Business}}\"\n            },\n            \"Number\": \"{{phoneNumber}}\",\n            \"IsMainNumber\": true\n        }\n    ],\n    \"EmailAddresses\": [\n        {\n            \"EmailType\": {\n                \"Id\": \"{{emailType_Business}}\"\n            },\n            \"EmailAddress\": \"{{emailAdd}}\",\n            \"IsMainEmail\": false\n        },\n        {\n            \"EmailType\": {\n                \"Id\": \"{{emailType_Business}}\"\n            },\n            \"EmailAddress\": \"{{emailAdd1}}\",\n            \"IsMainEmail\": true\n        }\n    ]\n    // ,\n    //    \"External\": {\n    //     \"Id\": \"{{$guid}}\",\n    //     \"Source\": \"external product A\"\n    // }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts"
							]
						},
						"description": "Post endpoint to create a new Contact"
					},
					"response": []
				},
				{
					"name": "Convert Contact to Client",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"clientId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"clientId\"));\r",
									"\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"ClientCode\": \"TEST123\"/*,\n    \"IsProspect\": false */\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/contacts/{{contactId}}/to-client",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"to-client"
							]
						},
						"description": "Post endpoint to create a Client from the specified Contact"
					},
					"response": []
				},
				{
					"name": "Delete Contact",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}"
							]
						},
						"description": "Delete endpoint to remove the specified Contact"
					},
					"response": []
				},
				{
					"name": "Get all Contacts",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts"
							]
						},
						"description": "Get endpoint to return all contacts for a tenant"
					},
					"response": []
				},
				{
					"name": "Get Contact By Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}?$expand=Addresses,EmailAddresses,PhoneNumbers,Relationships,Dimensions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}"
							],
							"query": [
								{
									"key": "$expand",
									"value": "Addresses,EmailAddresses,PhoneNumbers,Relationships,Dimensions"
								}
							]
						},
						"description": "Get endpoint to return a single contact belonging to a tenant"
					},
					"response": []
				},
				{
					"name": "Update Contact Person",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Name\": \"{{$randomFullName}}\",\n    \"ContactCode\": \"{{ContactCode}}\",\n    \"SubTypeProperties\": \"{ \\\"PropertyA\\\": 200, \\\"PropertyB\\\": \\\"Limited\\\" }\",\n    \"Website\": \"{{$randomProtocol}}://{{$randomDomainName}}\",\n    \"Person\": {\n        \"Title\": \"{{$randomNamePrefix}}\",\n        \"FirstNames\": \"{{$randomFirstName}}\",\n        \"MiddleNames\": \"{{name}}\",\n        \"LastNames\": \"{{$randomLastName}}\",\n        \"KnownAs\": \"{{$randomJobTitle}}\",\n        \"Suffixes\": \"{{$randomNameSuffix}}\",\n        \"DateOfBirth\": \"{{$isoTimestamp}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}"
							],
							"query": [
								{
									"key": "$expand",
									"value": "Addresses,EmailAddresses,PhoneNumbers,Relationships,Dimensions",
									"disabled": true
								}
							]
						},
						"description": "Patch endpoint to update the specified contact"
					},
					"response": []
				},
				{
					"name": "Update Contact Business",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Name\": \"{{$randomFullName}}\",\n    \"ContactCode\": \"{{ContactCode}}\",\n    \"SubTypeProperties\": \"{ \\\"PropertyA\\\": 200, \\\"PropertyB\\\": \\\"Limited\\\" }\",\n    \"Website\": \"{{$randomProtocol}}://{{$randomDomainName}}\",\n    \"Business\": {\n        \"TradingName\": \"{{$randomCompanyName}}\",\n        \"RegisteredName\": \"{{$randomBs}}\"\n    },\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}"
							],
							"query": [
								{
									"key": "$expand",
									"value": "Addresses,EmailAddresses,PhoneNumbers,Relationships,Dimensions",
									"disabled": true
								}
							]
						},
						"description": "Patch endpoint to update the specified contact"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var ContactCode = [\"RK\", \"JH\", \"SM\", \"CK\"]",
							"pm.collectionVariables.set(\"ContactCode\", ContactCode[_.random(ContactCode.length -1)]+_.random(10, 99));",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Customers",
			"item": [
				{
					"name": "Activate Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/activate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"activate"
							]
						},
						"description": "Post endpoint to set the isActive flag to true on the provided customer."
					},
					"response": []
				},
				{
					"name": "Deactivate Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/de-activate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"de-activate"
							]
						},
						"description": "Post endpoint to set the isActive flag to false on the provided customer."
					},
					"response": []
				},
				{
					"name": "Create Person Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var customer = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"customerId\",customer.Id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"CustomerCode\": \"DemoCustomerCode\",\n\"Person\": {\n\"Title\": \"Mr\",\n\"FirstNames\": \"Jim\",\n\"MiddleNames\": \"Frederick\",\n\"LastNames\": \"Burns\",\n\"KnownAs\": \"Jimbo\",\n\"Suffixes\": \"MBE\",\n\"Name\" : \"Jim Burns\",\n\"DateOfBirth\": \"1980-05-05\",\n\"SubType\": {\n\"Id\": \"{{defaultPersonSubType}}\"\n},\n\"SubTypeProperties\": \"{ \\\"PropertyA\\\": 100, \\\"PropertyB\\\": \\\"Limited\\\" }\",\n//\"OrgServiceUserId\": \"Can only be supplied from OrgService\",\n//\"OrgServiceBusinessId\": \"Can only be supplied from OrgService\",\n\"Website\": \"www.createcontact.co.uk/sc1\",\n\"Addresses\": [\n{\n\"AddressTypes\": [\n{ \"Id\": \"70e8486a-b1d4-4711-8642-e3506bf9d38b\" }\n],\n\"AddressLine1\": \"742 Evergreen Terrace\",\n\"Province\": \"Springfield\",\n\"City\": \"Manchester\",\n\"PostCode\": \"HO1 12ME\",\n\"CountryCode\": \"UK\",\n\"Name\": \"Home Address\",\n\"Locale\": {\n\"Id\": \"7e6e773d-24fd-ea74-4818-0504460f808d\"\n}\n},\n{\n\"AddressTypes\": [\n{ \"Id\": \"1a320fcf-4a77-4f24-96c6-49f85c0b444f\" }\n],\n\"AddressLine1\": \"35 Shrubland Street\",\n\"AddressLine2\": \"The Green Quarter\",\n\"City\": \"Manchester\",\n\"PostCode\": \"HO5 35ME\",\n\"CountryCode\": \"UK\",\n\"Name\": \"Office Address\",\n\"Locale\": {\n\"Id\": \"7e6e773d-24fd-ea74-4818-0504460f808d\"\n}\n}\n],\n/*\"LinkedAddresses\": [\n{\n\"AddressTypes\": [\n{ \"Id\": \"1a320fcf-4a77-4f24-96c6-49f85c0b444f\" }\n],\n\"Address\": {\n\"Id\": \"{{addressId}}\"\n}\n}\n],*/\n\"PhoneNumbers\" : [\n{\n\"PhoneNumberType\": {\n\"Id\": \"fb98d493-61a8-42fd-ba31-8b986a9c0465\"\n},\n\"Number\": \"0161555991\",\n\"IsMainNumber\":true\n},\n{\n\"PhoneNumberType\": {\n\"Id\": \"c87f5cbf-a0a3-c4cd-89ab-4ae79db1a243\"\n},\n\"Number\": \"0161555992\",\n\"IsMainNumber\":false\n}\n],\n\"EmailAddresses\": [\n{\n\"EmailType\": {\n\"Id\": \"34ab9a82-c2ad-f3ab-78c5-29a05ac75f5c\"\n},\n\"EmailAddress\": \"jimbo@hotmail.com\",\n\"IsMainEmail\": true\n},\n{\n\"EmailType\": {\n\"Id\": \"0a11c52e-3624-e5b4-2519-cc56083a87c1\"\n},\n\"EmailAddress\": \"mark@gmail.com\",\n\"IsMainEmail\": false\n}\n]/*,\n\"External\": {\n\"Id\": \"Insert External Id here\",\n\"Source\": \"external product A\"\n}*/\n}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers"
							]
						},
						"description": "Post endpoint to create a new Person Customer for a tenant"
					},
					"response": []
				},
				{
					"name": "Create Business Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var customer = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"customerId\",customer.Id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"CustomerCode\": \"DemoCustomerCode\",\n\"Business\": {\n\"SubType\": {\n\"Id\": \"{{defaultBusinessSubType}}\"\n},\n\"SubTypeProperties\": \"{ \\\"PropertyA\\\": 100, \\\"PropertyB\\\": \\\"Limited\\\" }\",\n\"Name\": \"Jim Burns\",\n\"Website\": \"www.createcontact.co.uk/sc1\",\n\"IsTaxRegistered\": true,\n\"TaxNumber\": \"123456\",\n//\"OrgServiceBusinessId\": \"Can only be supplied from OrgService\",\n\"Addresses\": [\n{\n\"AddressTypes\": [\n{\n\"Id\": \"53d4da4b-752f-d103-347d-72f2bb305882\"\n}\n],\n\"AddressLine1\": \"742 Evergreen Terrace\",\n\"Province\": \"Springfield\",\n\"City\": \"Manchester\",\n\"PostCode\": \"HO1 12ME\",\n\"CountryCode\": \"UK\",\n\"Name\": \"Home Address\",\n\"Locale\": {\n\"Id\": \"7e6e773d-24fd-ea74-4818-0504460f808d\"\n}\n},\n{\n\"AddressTypes\": [\n{\n\"Id\": \"53d4da4b-752f-d103-347d-72f2bb305882\"\n}\n],\n\"AddressLine1\": \"35 Shrubland Street\",\n\"AddressLine2\": \"The Green Quarter\",\n\"City\": \"Manchester\",\n\"PostCode\": \"HO5 35ME\",\n\"CountryCode\": \"UK\",\n\"Name\": \"Office Address\",\n\"Locale\": {\n\"Id\": \"7e6e773d-24fd-ea74-4818-0504460f808d\"\n}\n}\n],\n/*\"LinkedAddresses\": [\n{\n\"AddressTypes\": [\n{ \"Id\": \"53d4da4b-752f-d103-347d-72f2bb305882\" }\n],\n\"Address\": {\n\"Id\": \"{{addressId}}\"\n}\n}\n],*/\n\"PhoneNumbers\": [\n{\n\"PhoneNumberType\": {\n\"Id\": \"1e79c03a-76ab-0ef4-69a5-111f9ec5ff92\"\n},\n\"Number\": \"0161555991\",\n\"IsMainNumber\": true\n},\n{\n\"PhoneNumberType\": {\n\"Id\": \"e5bce924-0c06-c937-eb3e-4e3ba392ec77\"\n},\n\"Number\": \"0161555992\",\n\"IsMainNumber\": false\n}\n],\n\"EmailAddresses\": [\n{\n\"EmailType\": {\n\"Id\": \"79a01d9a-1a91-8c0a-fa4f-22eec1c478d0\"\n},\n\"EmailAddress\": \"jimbo@hotmail.com\",\n\"IsMainEmail\": true\n},\n{\n\"EmailType\": {\n\"Id\": \"72d5a09b-6422-4af5-9f57-49bdf3f71d03\"\n},\n\"EmailAddress\": \"mark@gmail.com\",\n\"IsMainEmail\": false\n}\n] /*,\n\"External\": {\n\"Id\": \"Insert External Id here\",\n\"Source\": \"external product A\"\n}*/\n}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers"
							]
						},
						"description": "Post endpoint to create a new Business Customer for a tenant"
					},
					"response": []
				},
				{
					"name": "Get Customers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers"
							]
						},
						"description": "Get endpoint to return all Customers belonging to a tenant"
					},
					"response": []
				},
				{
					"name": "Get Customer By Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}"
							]
						},
						"description": "Get endpoint to return a single Customer belonging to a tenant"
					},
					"response": []
				},
				{
					"name": "Update Customer Person",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"CustomerCode\": \"UpdatePersonCustomer\",\n    \"Person\": {\n        \"Title\": \"Mr\",\n        \"FirstNames\": \"first\",\n        \"MiddleNames\": \"middle\",\n        \"LastNames\": \"last\",\n        \"KnownAs\": \"knownAs\",\n        \"Suffixes\": \"Prefixes\",\n        \"Name\": \"Person\",\n        \"DateOfBirth\": \"1991-01-01\",\n        \"SubTypeProperties\":\"{\\\"Value\\\":\\\"PPPP\\\"}\",\n        \"OrgServiceUserId\": null,\n        \"OrgServiceBusinessId\": null,\n        \"Website\": \"https://sage.com\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}"
							]
						},
						"description": "Patch endpoint to update update the specified Person Customer"
					},
					"response": []
				},
				{
					"name": "Update Customer Business",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"CustomerCode\": \"UpdateBusinessCustomer\",\n    \"Business\": {\n        \"SubTypeProperties\": \"{\\\"Value\\\":\\\"BBBB\\\"}\",\n        \"Name\": \"Business\",\n        \"Website\": \"https://sage.com\",\n        \"OrgServiceBusinessId\": \"26e76e0e-a7d7-4b4e-a983-5222a29c0ffc\",\n        \"TradingName\": \"Postman Business\",\n        \"RegisteredName\": \"PostmanTest\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}"
							]
						},
						"description": "Patch endpoint to update update the specified Business Customer"
					},
					"response": []
				},
				{
					"name": "Delete Customer",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}"
							]
						},
						"description": "Delete endpoint to remove the specified Customer"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var CustomerCode = [\"RK\", \"JH\", \"SM\", \"CK\"]",
							"pm.collectionVariables.set(\"CustomerCode\", CustomerCode[_.random(CustomerCode.length -1)]+_.random(10, 99));",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Customers V2",
			"item": [
				{
					"name": "Create Person Customer V2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var customer = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"customerId\",customer.Id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Name\": \"{{$randomFullName}}\",\n    \"CustomerCode\": \"{{CustomerCode}}\",\n    \"SubType\": {\n        \"Id\": \"{{defaultPersonSubType}}\"\n    },\n    \"SubTypeProperties\": \"{}\",\n    \"OrgServiceBusinessId\": \"{{$guid}}\",\n    \"Website\": \"{{$randomProtocol}}://{{$randomDomainName}}\",\n    \"Person\": {\n        \"Title\": \"{{$randomNamePrefix}}\",\n        \"FirstNames\": \"{{$randomFirstName}}\",\n        \"MiddleNames\": \"{{name}}\",\n        \"LastNames\": \"{{$randomLastName}}\",\n        \"KnownAs\": \"{{$randomJobTitle}}\",\n        \"Suffixes\": \"{{$randomNameSuffix}}\",\n        \"DateOfBirth\": \"{{$isoTimestamp}}\",\n        \"OrgServiceUserId\": \"{{$guid}}\"\n    },\n    \"Addresses\": [\n        {\n            \"AddressTypes\": [\n                {\n                    \"Id\": \"{{addType_Person}}\"\n                }\n            ],\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"Locale\": {\n                \"Id\": \"{{addLocale}}\"\n            }\n        },\n        {\n            \"AddressTypes\": [\n                {\n                    \"Id\": \"{{addType_Person}}\"\n                }\n            ],\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"Province\": \"{{$randomCountry}}\",\n            \"City\": \"{{$randomCity}}\",\n            \"Suburb\": \"{{Suburb}}\",\n            \"PostCode\": \"{{PostCode}}\",\n            \"Name\": \"{{$randomFullName}}\",\n            \"CountryCode\": \"{{CountryCode}}\",\n            \"Locale\": {\n                \"Id\": \"{{addLocale}}\"\n            }\n        }\n    ],\n    \"PhoneNumbers\": [\n        {\n            \"PhoneNumberType\": {\n                \"Id\": \"{{phoneType_Person}}\"\n            },\n            \"Number\": \"{{phoneNumber1}}\",\n            \"IsMainNumber\": false\n        },\n        {\n            \"PhoneNumberType\": {\n                \"Id\": \"{{phoneType_Person}}\"\n            },\n            \"Number\": \"{{phoneNumber}}\",\n            \"IsMainNumber\": true\n        }\n    ],\n    \"EmailAddresses\": [\n        {\n            \"EmailType\": {\n                \"Id\": \"{{emailType_Person}}\"\n            },\n            \"EmailAddress\": \"{{emailAdd}}\",\n            \"IsMainEmail\": false\n        },\n        {\n            \"EmailType\": {\n                \"Id\": \"{{emailType_Person}}\"\n            },\n            \"EmailAddress\": \"{{emailAdd1}}\",\n            \"IsMainEmail\": true\n        }\n    ]\n    // ,\n    //    \"External\": {\n    //     \"Id\": \"{{$guid}}\",\n    //     \"Source\": \"external product A\"\n    // }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"customers"
							]
						},
						"description": "Post endpoint to create a new Person Customer for a tenant"
					},
					"response": []
				},
				{
					"name": "Create Business Customer V2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var customer = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"customerId\",customer.Id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Name\": \"{{$randomFullName}}\",\n    \"CustomerCode\": \"{{CustomerCode}}\",\n    \"SubType\": {\n        \"Id\": \"{{defaultBusinessSubType}}\"\n    },\n    \"SubTypeProperties\": \"{}\",\n    \"OrgServiceBusinessId\": \"{{$guid}}\",\n    \"Website\": \"{{$randomProtocol}}://{{$randomDomainName}}\",\n    \"Business\": {\n        \"TradingName\": \"{{$randomCompanyName}}\",\n        \"RegisteredName\": \"{{$randomBs}}\"\n    },\n    \"Addresses\": [\n        {\n            \"AddressTypes\": [\n                {\n                    \"Id\": \"{{addType_Business}}\"\n                }\n            ],\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"Locale\": {\n                \"Id\": \"{{addLocale}}\"\n            }\n        },\n        {\n            \"AddressTypes\": [\n                {\n                    \"Id\": \"{{addType_Business}}\"\n                }\n            ],\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"Province\": \"{{$randomCountry}}\",\n            \"City\": \"{{$randomCity}}\",\n            \"Suburb\": \"{{Suburb}}\",\n            \"PostCode\": \"{{PostCode}}\",\n            \"Name\": \"{{$randomFullName}}\",\n            \"CountryCode\": \"{{CountryCode}}\",\n            \"Locale\": {\n                \"Id\": \"{{addLocale}}\"\n            }\n        }\n    ],\n    \"PhoneNumbers\": [\n        {\n            \"PhoneNumberType\": {\n                \"Id\": \"{{phoneType_Business}}\"\n            },\n            \"Number\": \"{{phoneNumber1}}\",\n            \"IsMainNumber\": false\n        },\n        {\n            \"PhoneNumberType\": {\n                \"Id\": \"{{phoneType_Business}}\"\n            },\n            \"Number\": \"{{phoneNumber}}\",\n            \"IsMainNumber\": true\n        }\n    ],\n    \"EmailAddresses\": [\n        {\n            \"EmailType\": {\n                \"Id\": \"{{emailType_Business}}\"\n            },\n            \"EmailAddress\": \"{{emailAdd}}\",\n            \"IsMainEmail\": false\n        },\n        {\n            \"EmailType\": {\n                \"Id\": \"{{emailType_Business}}\"\n            },\n            \"EmailAddress\": \"{{emailAdd1}}\",\n            \"IsMainEmail\": true\n        }\n    ]\n    // ,\n    //    \"External\": {\n    //     \"Id\": \"{{$guid}}\",\n    //     \"Source\": \"external product A\"\n    // }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"customers"
							]
						},
						"description": "Post endpoint to create a new Business Customer for a tenant"
					},
					"response": []
				},
				{
					"name": "Get Customers V2",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/customers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"customers"
							]
						},
						"description": "Get endpoint to return all Customers belonging to a tenant"
					},
					"response": []
				},
				{
					"name": "Get Customer By Id V2",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/customers/{{customerId}}?$expand=Addresses,EmailAddresses,PhoneNumbers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}"
							],
							"query": [
								{
									"key": "$expand",
									"value": "Addresses,EmailAddresses,PhoneNumbers"
								}
							]
						},
						"description": "Get endpoint to return a single Customer belonging to a tenant"
					},
					"response": []
				},
				{
					"name": "Update Customer Person V2",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Name\": \"{{$randomFullName}}\",\n    \"CustomerCode\": \"{{CustomerCode}}\",\n    // \"InactiveDate\": {{$isoTimestamp}},\n    \"SubTypeProperties\": \"{}\",\n    \"OrgServiceBusinessId\": \"{{$guid}}\",\n    \"Website\": \"{{$randomProtocol}}://{{$randomDomainName}}\",\n    \"Person\": {\n        \"Title\": \"{{$randomNamePrefix}}\",\n        \"FirstNames\": \"{{$randomFirstName}}\",\n        \"MiddleNames\": \"{{name}}\",\n        \"LastNames\": \"{{$randomLastName}}\",\n        \"KnownAs\": \"{{$randomJobTitle}}\",\n        \"Suffixes\": \"{{$randomNameSuffix}}\",\n        \"DateOfBirth\": \"{{$isoTimestamp}}\",\n        \"OrgServiceUserId\": \"{{$guid}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/customers/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}"
							]
						},
						"description": "Patch endpoint to update update the specified Person Customer"
					},
					"response": []
				},
				{
					"name": "Update Customer Business V2",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Name\": \"{{$randomFullName}}\",\n    \"CustomerCode\": \"{{CustomerCode}}\",\n    // \"InactiveDate\": {{$isoTimestamp}},\n    \"SubTypeProperties\": \"{}\",\n    \"OrgServiceBusinessId\": \"{{$guid}}\",\n    \"Website\": \"{{$randomProtocol}}://{{$randomDomainName}}\",\n    \"Business\": {\n        \"TradingName\": \"{{$randomCompanyName}}\",\n        \"RegisteredName\": \"{{$randomBs}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/customers/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}"
							]
						},
						"description": "Patch endpoint to update update the specified Business Customer"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var CustomerCode = [\"RK\", \"JH\", \"SM\", \"CK\"]",
							"pm.collectionVariables.set(\"CustomerCode\", CustomerCode[_.random(CustomerCode.length -1)]+_.random(10, 99));",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Dimensions (Client v2)",
			"item": [
				{
					"name": "Assign Client Dimension",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Tags\": [ { \"Id\":\"7444680E-4D8C-4D1F-B905-434B83AE00B4\" }]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/dimensions/{{dimensionId}}/assign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"dimensions",
								"{{dimensionId}}",
								"assign"
							]
						},
						"description": "Post endpoint to create a new Business entity for a tenant"
					},
					"response": []
				},
				{
					"name": "Unassign Client Dimension",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Tags\": [ { \"Id\":\"d8a8b1b7-3746-467f-9f2e-5e34d197c2db\" }]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/dimensions/{{dimensionId}}/unassign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"dimensions",
								"{{dimensionId}}",
								"unassign"
							]
						},
						"description": "Post endpoint to create a new Business entity for a tenant"
					},
					"response": []
				},
				{
					"name": "Unassign all Client Dimension",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/dimensions/{{dimensionId}}/unassign-all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"dimensions",
								"{{dimensionId}}",
								"unassign-all"
							]
						},
						"description": "Post endpoint to create a new Business entity for a tenant"
					},
					"response": []
				},
				{
					"name": "Get Client Dimensions",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/dimensions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"dimensions"
							]
						},
						"description": "Get endpoint to retrieve a Business entity for a tenant"
					},
					"response": []
				},
				{
					"name": "Get Client Dimension by Id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/dimensions/{{dimensionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"dimensions",
								"{{dimensionId}}"
							]
						},
						"description": "Get endpoint to retrieve a Business entity for a tenant"
					},
					"response": []
				}
			]
		},
		{
			"name": "Dimensions (Contact)",
			"item": [
				{
					"name": "Assign Contact Dimension",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Tags\": [ { \"Id\":\"FE1B4FC0-41AF-4162-820F-853464E54C06\" }]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/dimensions/{{dimensionId}}/assign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"dimensions",
								"{{dimensionId}}",
								"assign"
							]
						},
						"description": "Post endpoint to create a new Business entity for a tenant"
					},
					"response": []
				},
				{
					"name": "Unassign Contact Dimension",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Tags\": [ { \"Id\":\"d8a8b1b7-3746-467f-9f2e-5e34d197c2db\" }]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/dimensions/{{dimensionId}}/unassign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"dimensions",
								"{{dimensionId}}",
								"unassign"
							]
						},
						"description": "Post endpoint to create a new Business entity for a tenant"
					},
					"response": []
				},
				{
					"name": "Unassign all Contact Dimensions",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/dimensions/{{dimensionId}}/unassign-all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"dimensions",
								"{{dimensionId}}",
								"unassign-all"
							]
						},
						"description": "Post endpoint to create a new Business entity for a tenant"
					},
					"response": []
				},
				{
					"name": "Get Contact Dimensions",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/dimensions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"dimensions"
							]
						},
						"description": "Get endpoint to retrieve a Business entity for a tenant"
					},
					"response": []
				},
				{
					"name": "Get Contact Dimension by Id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/dimensions/{{dimensionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"dimensions",
								"{{dimensionId}}"
							]
						},
						"description": "Get endpoint to retrieve a Business entity for a tenant"
					},
					"response": []
				}
			]
		},
		{
			"name": "Dimensions (Customer)",
			"item": [
				{
					"name": "Assign Customer Dimension",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Tags\": [ { \"Id\":\"FE1B4FC0-41AF-4162-820F-853464E54C06\" }]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/dimensions/{{dimensionId}}/assign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"dimensions",
								"{{dimensionId}}",
								"assign"
							]
						},
						"description": "Post endpoint to create a new Business entity for a tenant"
					},
					"response": []
				},
				{
					"name": "Unassign Customer Dimension",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Tags\": [ { \"Id\":\"d8a8b1b7-3746-467f-9f2e-5e34d197c2db\" }]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customer/{{customerId}}/dimensions/{{dimensionId}}/unassign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customer",
								"{{customerId}}",
								"dimensions",
								"{{dimensionId}}",
								"unassign"
							]
						},
						"description": "Post endpoint to create a new Business entity for a tenant"
					},
					"response": []
				},
				{
					"name": "Unassign all Customer Dimensions",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/dimensions/{{dimensionId}}/unassign-all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"dimensions",
								"{{dimensionId}}",
								"unassign-all"
							]
						},
						"description": "Post endpoint to create a new Business entity for a tenant"
					},
					"response": []
				},
				{
					"name": "Get Customer Dimensions",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/dimensions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"dimensions"
							]
						},
						"description": "Get endpoint to retrieve a Business entity for a tenant"
					},
					"response": []
				},
				{
					"name": "Get Customer Dimension by Id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/dimensions/{{dimensionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"dimensions",
								"{{dimensionId}}"
							]
						},
						"description": "Get endpoint to retrieve a Business entity for a tenant"
					},
					"response": []
				}
			]
		},
		{
			"name": "Dimensions (Employee)",
			"item": [
				{
					"name": "Assign Employee Dimension",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Tags\": [ { \"Id\":\"FE1B4FC0-41AF-4162-820F-853464E54C06\" }]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/dimensions/{{dimensionId}}/assign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"dimensions",
								"{{dimensionId}}",
								"assign"
							]
						},
						"description": "Post endpoint to create a new Business entity for a tenant"
					},
					"response": []
				},
				{
					"name": "Unassign Employee Dimension",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Tags\": [ { \"Id\":\"d8a8b1b7-3746-467f-9f2e-5e34d197c2db\" }]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/dimensions/{{dimensionId}}/unassign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"dimensions",
								"{{dimensionId}}",
								"unassign"
							]
						},
						"description": "Post endpoint to create a new Business entity for a tenant"
					},
					"response": []
				},
				{
					"name": "Unassign all Employee Dimensions",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/dimensions/{{dimensionId}}/unassign-all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"dimensions",
								"{{dimensionId}}",
								"unassign-all"
							]
						},
						"description": "Post endpoint to create a new Business entity for a tenant"
					},
					"response": []
				},
				{
					"name": "Get Employee Dimensions",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/dimensions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"dimensions"
							]
						},
						"description": "Get endpoint to retrieve a Business entity for a tenant"
					},
					"response": []
				},
				{
					"name": "Get Employee Dimension by Id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/dimensions/{{dimensionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"dimensions",
								"{{dimensionId}}"
							]
						},
						"description": "Get endpoint to retrieve a Business entity for a tenant"
					},
					"response": []
				}
			]
		},
		{
			"name": "Dimensions (Supplier)",
			"item": [
				{
					"name": "Assign Supplier Dimension",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Tags\": [ { \"Id\":\"FE1B4FC0-41AF-4162-820F-853464E54C06\" }]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/dimensions/{{dimensionId}}/assign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"dimensions",
								"{{dimensionId}}",
								"assign"
							]
						},
						"description": "Post endpoint to create a new Business entity for a tenant"
					},
					"response": []
				},
				{
					"name": "Unassign Supplier Dimension",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Tags\": [ { \"Id\":\"0853234e-039a-4002-ac28-21221bda4527\" }]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/dimensions/{{dimensionId}}/unassign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"dimensions",
								"{{dimensionId}}",
								"unassign"
							]
						},
						"description": "Post endpoint to create a new Business entity for a tenant"
					},
					"response": []
				},
				{
					"name": "Unassign all Supplier Dimensions",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/dimensions/{{dimensionId}}/unassign-all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"dimensions",
								"{{dimensionId}}",
								"unassign-all"
							]
						},
						"description": "Post endpoint to create a new Business entity for a tenant"
					},
					"response": []
				},
				{
					"name": "Get Supplier Dimensions",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/dimensions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"dimensions"
							]
						},
						"description": "Get endpoint to retrieve a Business entity for a tenant"
					},
					"response": []
				},
				{
					"name": "Get Supplier Dimension by Id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/dimensions/{{dimensionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"dimensions",
								"{{dimensionId}}"
							]
						},
						"description": "Get endpoint to retrieve a Business entity for a tenant"
					},
					"response": []
				}
			]
		},
		{
			"name": "Employee",
			"item": [
				{
					"name": "Create Employee",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"employeeId\",pm.response.json().Id);\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"Name\": \"Arnold Jefferson\",\n\"EmployeeCode\": \"ABC123456\",\n\"WorkStartDate\": \"2012-04-12\",\n\"WorkEndDate\": \"2021-12-12\",\n\"TerminationReason\": \"Misconduct\",\n\"TerminationCode\": \"100\",\n\"Position\": \"Accountant\",\n\"PayrollRecordComplete\": true,\n\"LastPayRun\": \"2021-12-01\",\n\"LocaleCode\": \"en-GB\",\n\"Person\": {\n\"Title\": \"Mr\",\n\"FirstNames\": \"Jim\",\n\"LastNames\": \"Burns\",\n\"DateOfBirth\": \"1980-05-05\",\n\"SubType\": {\n\"Id\": \"{{defaultPersonSubType}}\"\n},\n//\"OrgServiceBusinessId\": \"Can only be supplied from OrgService\",\n\"Addresses\": [\n{\n\"AddressTypes\": [\n{ \"Id\": \"70e8486a-b1d4-4711-8642-e3506bf9d38b\" } // business AddressType change to 53d4da4b-752f-d103-347d-72f2bb305882\n],\n\"AddressLine1\": \"742 Evergreen Terrace\",\n\"Province\": \"Springfield\",\n\"City\": \"Manchester\",\n\"PostCode\": \"HO1 12ME\",\n\"CountryCode\": \"UK\",\n\"Name\": \"Home Address\",\n\"Locale\": {\n\"Id\": \"7e6e773d-24fd-ea74-4818-0504460f808d\"\n}\n},\n{\n\"AddressTypes\": [\n{ \"Id\": \"1a320fcf-4a77-4f24-96c6-49f85c0b444f\" } // business AddressType change to 53d4da4b-752f-d103-347d-72f2bb305882\n],\n\"AddressLine1\": \"35 Shrubland Street\",\n\"AddressLine2\": \"The Green Quarter\",\n\"City\": \"Manchester\",\n\"PostCode\": \"HO5 35ME\",\n\"CountryCode\": \"UK\",\n\"Name\": \"Office Address\",\n\"Locale\": {\n\"Id\": \"7e6e773d-24fd-ea74-4818-0504460f808d\"\n}\n}\n],\n\"PhoneNumbers\" : [\n{\n\"PhoneNumberType\": {\n\"Id\": \"fb98d493-61a8-42fd-ba31-8b986a9c0465\" // business PhoneNumberType change to 1e79c03a-76ab-0ef4-69a5-111f9ec5ff92\n},\n\"Number\": \"0161555991\",\n\"IsMainNumber\":true\n},\n{\n\"PhoneNumberType\": {\n\"Id\": \"c87f5cbf-a0a3-c4cd-89ab-4ae79db1a243\" // business PhoneNumberType change to e5bce924-0c06-c937-eb3e-4e3ba392ec77\n},\n\"Number\": \"0161555992\",\n\"IsMainNumber\":false\n}\n],\n\"EmailAddresses\": [\n{\n\"EmailType\": {\n\"Id\": \"34ab9a82-c2ad-f3ab-78c5-29a05ac75f5c\" // business EmailType change to 79a01d9a-1a91-8c0a-fa4f-22eec1c478d0\n},\n\"EmailAddress\": \"jimbo@hotmail.com\",\n\"IsMainEmail\": true\n},\n{\n\"EmailType\": {\n\"Id\": \"0a11c52e-3624-e5b4-2519-cc56083a87c1\" // business EmailType change to 72d5a09b-6422-4af5-9f57-49bdf3f71d03\n},\n\"EmailAddress\": \"mark@gmail.com\",\n\"IsMainEmail\": false\n}\n]\n}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees"
							]
						},
						"description": "Post endpoint to create a new Employee for a tenant"
					},
					"response": []
				},
				{
					"name": "Delete Employee",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}"
							]
						},
						"description": "Delete endpoint to delete an existing Employee for a tenant"
					},
					"response": []
				},
				{
					"name": "Get Employee By Id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}"
							]
						},
						"description": "Get endpoint to return an Employee for a tenant"
					},
					"response": []
				},
				{
					"name": "Get Employees",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees"
							]
						},
						"description": "Get endpoint to return all Employees for a tenant"
					},
					"response": []
				},
				{
					"name": "Update Employee",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"EmployeeCode\": \"Updated Employee Code\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}"
							]
						},
						"description": "Patch endpoint to update an Employee for a tenant"
					},
					"response": []
				},
				{
					"name": "Put Employee",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"Put Employee Name\",\r\n\t\"EmployeeCode\": \"Put Employee Updated Code\",\r\n    \"Person\": { \r\n        \"FirstNames\": \"Test\",\r\n        \"LastNames\": \"Employee\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}"
							]
						},
						"description": "Patch endpoint to update an Employee for a tenant"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var employeeCode = [\"RK\", \"JH\", \"SM\", \"CK\"]",
							"var Termination_Reason = [\"Misconduct\", \"Fired\", \"Posted\", \"No Reason\", \"MisUse\"]",
							"",
							"",
							"pm.collectionVariables.set(\"employeeCode\", employeeCode[_.random(employeeCode.length -1)]+_.random(10, 99));",
							"pm.collectionVariables.set(\"Termination_Reason\",Termination_Reason[_.random(Termination_Reason.length -1)]);",
							"",
							"",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Employee (V2)",
			"item": [
				{
					"name": "Create Employee V2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"employeeId\",pm.response.json().Id);\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Name\": \"{{name}}\",\n    \"EmployeeCode\": \"{{employeeCode}}\",\n    \"WorkStartDate\": \"{{$isoTimestamp}}\",\n    \"WorkEndDate\": \"{{$isoTimestamp}}\",\n    \"TerminationReason\": \"{{termination_Reason}}\",\n    \"TerminationCode\": \"{{$randomInt}}\",\n    \"Position\": \"{{$randomJobTitle}}\",\n    \"PayrollRecordComplete\": true,\n    \"LastPayRun\": \"{{$isoTimestamp}}\",\n    \"LocaleCode\": \"{{Locale_code}}\",\n    \"Settings\": [\n        {\n            \"Key\": \"Name\",\n            \"Value\": \"{{name}}\"\n        },\n        {\n            \"Key\": \"Email\",\n            \"Value\": \"{{emailAdd}}\"\n        }\n    ],\n    \"Person\": {\n        \"Title\": \"{{$randomNamePrefix}}\",\n        \"FirstNames\": \"{{$randomFirstName}}\",\n        \"LastNames\": \"{{$randomLastName}}\",\n        \"DateOfBirth\": \"{{$isoTimestamp}}\"\n        //\"OrgServiceUserId\": \"Can only be supplied from OrgService\",\n    },\n    \"SubType\": {\n        \"Id\": \"{{defaultPersonSubType}}\"\n    }\n    ,\n    \"Addresses\": [\n        {\n            \"AddressTypes\": [\n                {\n                    \"Id\": \"{{addType_Person}}\"\n                }\n            ],\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"Locale\": {\n                \"Id\": \"{{addLocale}}\"\n            }\n        },\n        {\n            \"AddressTypes\": [\n                {\n                    \"Id\": \"{{addType_Person}}\"\n                }\n            ],\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"Province\": \"{{$randomCountry}}\",\n            \"City\": \"{{$randomCity}}\",\n            \"Suburb\": \"{{Suburb}}\",\n            \"PostCode\": \"{{PostCode}}\",\n            \"Name\": \"{{$randomFullName}}\",\n            \"CountryCode\": \"{{CountryCode}}\",\n            \"Locale\": {\n                \"Id\": \"{{addLocale}}\"\n            }\n        }\n    ],\n    \"AdditionalRegistrationNumbers\": [\n        {\n            \"RegistrationNumberType\": {\n                \"Id\": \"{{regnumtypevat}}\"\n            },\n            \"RegistrationNumber\": \"0987654321\"\n        }\n    ],\n    \"PhoneNumbers\": [\n        {\n            \"PhoneNumberType\": {\n                \"Id\": \"{{phoneType_Person}}\"\n            },\n            \"Number\": \"{{phoneNumber1}}\",\n            \"IsMainNumber\": false\n        },\n        {\n            \"PhoneNumberType\": {\n                \"Id\": \"{{phoneType_Person}}\"\n            },\n            \"Number\": \"{{phoneNumber}}\",\n            \"IsMainNumber\": true\n        }\n    ],\n    \"EmailAddresses\": [\n        {\n            \"EmailType\": {\n                \"Id\": \"{{emailType_Person}}\"\n            },\n            \"EmailAddress\": \"{{emailAdd}}\",\n            \"IsMainEmail\": false\n        },\n        {\n            \"EmailType\": {\n                \"Id\": \"{{emailType_Person}}\"\n            },\n            \"EmailAddress\": \"{{emailAdd1}}\",\n            \"IsMainEmail\": true\n        }\n    ],\n    \"BankAccounts\": [\n        {\n            \"Name\": \"{{Lname}}\",\n            \"BranchCode\": \"{{BranchCode1}}\",\n            \"AccountNumber\": \"{{AccountNumber1}}\",\n            \"IBan\": \"{{IBan1}}\",\n            \"BicSwift\": \"{{BicSwift1}}\"\n        },\n        {{bankAccountRequest}}\n    ]\n    // Create test data for dimension and then uncomment this dimension section\n    /*\n    ,\n    \"Dimensions\": [\n        {\n            \"Dimension\": {\n                \"Id\": \"{{dimensionId}}\"\n            },\n            \"DimensionTags\": [\n                {\n                    \"Id\": \"{{dimensionTagId1}}\"\n                },\n                {\n                    \"Id\": \"{{dimensionTagId2}}\"\n                },\n                {\n                    \"Id\": \"{{dimensionTagId3}}\"\n                }\n            ]\n        }\n    ]\n    */\n    // ,\n    // \"External\": {\n    //     \"Id\": \"Insert External Id here\",\n    //     \"Source\":\"external product A\"\n    // }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/employees",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"employees"
							]
						},
						"description": "Post endpoint to create a new Employee for a tenant"
					},
					"response": []
				},
				{
					"name": "Create Employee V2 Multiple error",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Name\": \"{{name}}\",\n    \"EmployeeCode\": \"{{EmployeeCode}}\",\n    \"WorkStartDate\": \"2001-01-02\",\n    \"WorkEndDate\": \"2019-01-01\",\n    // \"TerminationReason\": \"Change of role\",\n    \"LocaleCode\": \"en-GA\",\n    \"SubType\": {\n        \"Id\": \"{{defaultPersonSubType}}\"\n    },\n    \"Settings\": [\n        {\n            \"Key\": \"Test\",\n            \"Value\": \"Employee\"\n        }\n    ],\n    \"Person\": {\n        \"FirstNames\": \"Test\",\n        \"LastNames\": \"Employee\"\n    },\n    \"Addresses\": [\n        {\n            \"AddressTypes\": [\n                {\n                    \"Id\": \"70e8486a-b1d4-4711-8642-e3506bf9d38b\" // No multiple records\n                }\n            ],\n            \"AddressLine1\": \"1 Exchange Quay\",\n            \"CountryCode\": \"SS\",\n            \"Locale\": {\n                \"Id\": \"{{addLocale}}\"\n            }\n        },\n        {\n            \"AddressTypes\": [\n                {\n                    \"Id\": \"70e8486a-b1d4-4711-8642-e3506bf9d38b\" // No multiple records\n                }\n            ],\n            \"AddressLine1\": \"11 Exchange Quay\",\n            \"AddressLine2\": \"SeaZone\",\n            \"Province\": \"Salford\",\n            \"City\": \"Manc\",\n            \"Suburb\": \"City\",\n            \"PostCode\": \"M33 AFF\",\n            \"Name\": \"TEST_Ctact\",\n            \"CountryCode\": \"SS\",\n            \"Locale\": {\n                \"Id\": \"{{addLocale}}\"\n            }\n        },\n        {\n            \"AddressTypes\": [\n                {\n                    \"Id\": \" \" // No type\n                }\n            ],\n            \"AddressLine1\": \"11 Exchange Quay\",\n            \"AddressLine2\": \"SeaZone\",\n            \"Province\": \"Salford\",\n            \"City\": \"Manc\",\n            \"Suburb\": \"City\",\n            \"PostCode\": \"M33 AFF\",\n            \"Name\": \"TEST_Ctact\",\n            \"CountryCode\": \"SS\",\n            \"Locale\": {\n                \"Id\": \"{{addLocale}}\"\n            }\n        },\n        {\n            \"AddressTypes\": [\n                {\n                    \"Id\": \"53d4da4b-752f-d103-347d-72f2bb305882\" // Add Type belongs to different subtype\n                }\n            ],\n            \"AddressLine1\": \"11 Exchange Quay\",\n            \"AddressLine2\": \"SeaZone\",\n            \"Province\": \"Salford\",\n            \"City\": \"Manc\",\n            \"Suburb\": \"City\",\n            \"PostCode\": \"M33 AFF\",\n            \"Name\": \"TEST_Ctact\",\n            \"CountryCode\": \"SS\",\n            \"Locale\": {\n                \"Id\": \"{{addLocale11}}\" //invalid locale\n            }\n        },\n        {\n            \"AddressTypes\": [\n                {\n                    \"Id\": \"53d4da4b-752f-d103-347d\" //Invalid type\n                }\n            ],\n            \"AddressLine1\": \"11 Exchange Quay\",\n            \"AddressLine2\": \"SeaZone\",\n            \"Province\": \"Salford\",\n            \"City\": \"Manc\",\n            \"Suburb\": \"City\",\n            \"PostCode\": \"M33 AFF\",\n            \"Name\": \"TEST_Ctact\",\n            \"CountryCode\": \"SS\",\n            \"Locale\": {\n                \"Id\": \"d05fb08e-b6c5-3b8f-156f-5f1fc7aa214a\" //invalid locale\n            }\n        }\n    ]\n    ,\n    \"PhoneNumbers\": [\n        {\n            \"PhoneNumberType\": {\n                \"Id\": \"{{phoneType_Personk}}\" //invalid type\n            },\n            \"Number\": \"{{phoneNumber1}}\",\n            \"IsMainNumber\": false\n        },\n        {\n            \"PhoneNumberType\": {\n                \"Id\": \"{{phoneType_Person}}\" //ismain multiple time\n            },\n            \"Number\": \"{{phoneNumber1}}\",\n            \"IsMainNumber\": true\n        },\n        {\n            \"PhoneNumberType\": {\n                \"Id\": \"{{phoneType_Person}}\" //valid \n            },\n            \"Number\": \"{{phoneNumber}}\",\n            \"IsMainNumber\": true\n        },\n        {\n            \"PhoneNumberType\": {\n                \"Id\": \"e5bce924-0c06-c937-eb3e-4e3ba392ec77\" //different subtype\n            },\n            \"Number\": \"{{phoneNumber}}\",\n            \"IsMainNumber\": false\n        },\n        {\n            \"PhoneNumberType\": {\n                \"Id\": \"{{phoneType_Person}}\"\n            },\n            \"Number\": \"??\", //invlaid format\n            \"IsMainNumber\": false\n        }\n    ],\n    \"EmailAddresses\": [\n        {\n            \"EmailType\": {\n                \"Id\": \"888888\"\n            },\n            \"EmailAddress\": \"{{emailAdd}}\",\n            \"IsMainEmail\": false\n        }\n        ,\n        {\n            \"EmailType\": {\n                \"Id\": \"{{emailType_Person}}\"\n            },\n            \"EmailAddress\": \"{{emailAdd1}}\",\n            \"IsMainEmail\": true\n        },\n        {\n            \"EmailType\": {\n                \"Id\": \"72d5a09b-6422-4af5-9f57-49bdf3f71d03\" //different subtype\n            },\n            \"EmailAddress\": \"{{emailAdd1}}\",\n            \"IsMainEmail\": false\n        },\n        {\n            \"EmailType\": {\n                \"Id\": \"{{emailType_Person}}\"\n            },\n            \"EmailAddress\": \"sss@ com\", //invalid format\n            \"IsMainEmail\": false\n        },\n        {\n            \"EmailType\": {\n                \"Id\": \"{{emailType_Person}}\"\n            },\n            \"EmailAddress\": \"{{emailAdd1}}\", //is main multiple time\n            \"IsMainEmail\": true\n        }\n    ]\n    /*\n    //  ,\n    // \"External\": {\n    //     \"Id\": \"12\",\n    //     \"Source\": \"A\"\n    // }\n    // ,\n    // \"BankAccounts\": [\n    //     {\n    //         \"Name\": \"{{$randomLoremParagraphs}}\",\n    //         \"BranchCode\": \"{{$randomLoremParagraphs}}\",\n    //         \"AccountNumber\": \"{{$randomLoremParagraphs}}\",\n    //         \"IBan\": \"{{$randomLoremParagraphs}}\",\n    //         \"BicSwift\": \"{{$randomLoremParagraphs}}\"\n    //     }\n    // ]\n    */\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/employees",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"employees"
							]
						},
						"description": "Post endpoint to create a new Employee for a tenant"
					},
					"response": []
				},
				{
					"name": "Get Employee By Id V2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if(pm.response.json().Addresses && pm.response.json().Addresses == 0)\r",
									"    {\r",
									"\r",
									"      console.log(\"Address array empty\");\r",
									"    }\r",
									"else if (pm.response.json().Addresses[0].Id) {\r",
									"  console.log(\"id was found!\");\r",
									"      console.log(pm.response.json().Addresses[0].Id);\r",
									"\r",
									"    pm.environment.set(\"addressId\",pm.response.json().Addresses[0].Id);\r",
									"      console.log(pm.environment.get(\"addressId\"));\r",
									"\r",
									"  // do something\r",
									"} \r",
									"\r",
									"else {\r",
									"  console.log(\"no id ...\");\r",
									"  //do something else\r",
									"}\r",
									"\r",
									"if(pm.response.json().PhoneNumbers && pm.response.json().PhoneNumbers == 0)\r",
									"    {\r",
									"\r",
									"      console.log(\"PhoneNumbers array empty\");\r",
									"    }\r",
									"else if (pm.response.json().PhoneNumbers[0].Id) {\r",
									"  console.log(\"id was found!\");\r",
									"      console.log(pm.response.json().PhoneNumbers[0].Id);\r",
									"\r",
									"    pm.environment.set(\"phoneNumberId\",pm.response.json().PhoneNumbers[0].Id);\r",
									"      console.log(pm.environment.get(\"phoneNumberId\"));\r",
									"\r",
									"  // do something\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"  //do something else\r",
									"}\r",
									"\r",
									"if(pm.response.json().EmailAddresses && pm.response.json().EmailAddresses == 0)\r",
									"    {\r",
									"\r",
									"      console.log(\"EmailAddresses array empty\");\r",
									"    }\r",
									"else if (pm.response.json().EmailAddresses[0].Id) {\r",
									"  console.log(\"id was found!\");\r",
									"      console.log(pm.response.json().EmailAddresses[0].Id);\r",
									"\r",
									"    pm.environment.set(\"emailAddressId\",pm.response.json().EmailAddresses[0].Id);\r",
									"      console.log(pm.environment.get(\"emailAddressId\"));\r",
									"\r",
									"  // do something\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"  //do something else\r",
									"}\r",
									"\r",
									"if(pm.response.json().AdditionalRegistrationNumbers && pm.response.json().AdditionalRegistrationNumbers == 0)\r",
									"    {\r",
									"\r",
									"      console.log(\"AdditionalRegistrationNumbers array empty\");\r",
									"    }\r",
									"else if (pm.response.json().AdditionalRegistrationNumbers[0].Id) {\r",
									"  console.log(\"id was found!\");\r",
									"      console.log(pm.response.json().AdditionalRegistrationNumbers[0].Id);\r",
									"\r",
									"    pm.environment.set(\"registrationNumberId\",pm.response.json().AdditionalRegistrationNumbers[0].Id);\r",
									"      console.log(pm.environment.get(\"registrationNumberId\"));\r",
									"\r",
									"  // do something\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"  //do something else\r",
									"}\r",
									"\r",
									"if(pm.response.json().BankAccounts && pm.response.json().BankAccounts == 0)\r",
									"    {\r",
									"\r",
									"      console.log(\"BankAccounts array empty\");\r",
									"    }\r",
									"else if (pm.response.json().BankAccounts[0].Id) {\r",
									"  console.log(\"id was found!\");\r",
									"      console.log(pm.response.json().BankAccounts[0].Id);\r",
									"\r",
									"    pm.environment.set(\"bankAccountId\",pm.response.json().BankAccounts[0].Id);\r",
									"      console.log(pm.environment.get(\"bankAccountId\"));\r",
									"\r",
									"  // do something\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"  //do something else\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/employees/{{employeeId}}?$expand=Addresses,EmailAddresses,PhoneNumbers,AdditionalRegistrationNumbers,BankAccounts,Dimensions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}"
							],
							"query": [
								{
									"key": "$expand",
									"value": "Addresses,EmailAddresses,PhoneNumbers,AdditionalRegistrationNumbers,BankAccounts,Dimensions"
								}
							]
						},
						"description": "Get endpoint to return an Employee for a tenant"
					},
					"response": []
				},
				{
					"name": "Get Employees V2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/employees",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"employees"
							],
							"query": [
								{
									"key": "IncludeDeleted",
									"value": "true",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "ChangedSince gt 2023-06-01T12:31:37.3580000",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "ChangedSince eq 2023-06-01T10:53:45.4650000",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "Name eq 'jakcpol'",
									"disabled": true
								}
							]
						},
						"description": "Get endpoint to return all Employees for a tenant"
					},
					"response": []
				},
				{
					"name": "Update Employee V2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"{{name}}\",\r\n    \"EmployeeCode\": \"{{employeeCode}}\",\r\n    \"WorkStartDate\": \"{{$isoTimestamp}}\",\r\n    \"WorkEndDate\": \"{{$isoTimestamp}}\",\r\n    \"TerminationReason\": \"{{termination_Reason}}\",\r\n    \"TerminationCode\": \"{{$randomInt}}\",\r\n    \"Position\": \"{{$randomJobTitle}}\",\r\n    \"PayrollRecordComplete\": true,\r\n    \"LastPayRun\": \"{{$isoTimestamp}}\",\r\n    \"LocaleCode\": \"{{Locale_code}}\",\r\n    \"Person\": {\r\n        \"Title\": \"{{$randomNamePrefix}}\",\r\n        \"FirstNames\": \"{{$randomFirstName}}\",\r\n        \"LastNames\": \"{{$randomLastName}}\",\r\n        \"DateOfBirth\": \"{{$isoTimestamp}}\"\r\n        //\"OrgServiceUserId\": \"Can only be supplied from OrgService\",\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/employees/{{employeeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}"
							]
						},
						"description": "Patch endpoint to update an Employee for a tenant"
					},
					"response": []
				},
				{
					"name": "Put Employee V2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"{{name}}\",\r\n    \"EmployeeCode\": \"{{employeeCode}}\",\r\n    \"WorkStartDate\": \"{{$isoTimestamp}}\",\r\n    \"WorkEndDate\": \"{{$isoTimestamp}}\",\r\n    \"TerminationReason\": \"{{termination_Reason}}\",\r\n    \"TerminationCode\": \"{{$randomInt}}\",\r\n    \"Position\": \"{{$randomJobTitle}}\",\r\n    \"PayrollRecordComplete\": true,\r\n    \"LastPayRun\": \"{{$isoTimestamp}}\",\r\n    \"LocaleCode\": \"{{Locale_code}}\",\r\n    \"Settings\": [\r\n        {\r\n            \"Key\": \"Name\",\r\n            \"Value\": \"{{name}}\"\r\n        },\r\n        {\r\n            \"Key\": \"Email\",\r\n            \"Value\": \"{{emailAdd}}\"\r\n        }\r\n    ],\r\n    \"Person\": {\r\n        \"Title\": \"{{$randomNamePrefix}}\",\r\n        \"FirstNames\": \"{{$randomFirstName}}\",\r\n        \"LastNames\": \"{{$randomLastName}}\",\r\n        \"DateOfBirth\": \"{{$isoTimestamp}}\"\r\n        //\"OrgServiceUserId\": \"Can only be supplied from OrgService\",\r\n    },\r\n    \"Addresses\": [\r\n        {\r\n            // \"Id\": \"{{addressId}}\", //Before using this run get employee by id.\r\n            \"AddressTypes\": [\r\n                {\r\n                    \"Id\": \"{{addType_Person}}\"\r\n                }\r\n            ],\r\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\r\n            \"AddressLine2\": \"{{$randomStreetName}}\",\r\n            \"Province\": \"{{$randomCountry}}\",\r\n            \"City\": \"{{$randomCity}}\",\r\n            \"Suburb\": \"{{Suburb}}\",\r\n            \"PostCode\": \"{{PostCode}}\",\r\n            \"Name\": \"{{$randomFullName}}\",\r\n            \"CountryCode\": \"{{CountryCode}}\",\r\n            \"Locale\": {\r\n                \"Id\": \"{{addLocale}}\"\r\n            }\r\n        },\r\n        {\r\n            \"AddressTypes\": [\r\n                {\r\n                    \"Id\": \"{{addType_Person}}\"\r\n                }\r\n            ],\r\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\r\n            \"AddressLine2\": \"{{$randomStreetName}}\",\r\n            \"Province\": \"{{$randomCountry}}\",\r\n            \"City\": \"{{$randomCity}}\",\r\n            \"Suburb\": \"{{Suburb}}\",\r\n            \"PostCode\": \"{{PostCode}}\",\r\n            \"Name\": \"{{$randomFullName}}\",\r\n            \"CountryCode\": \"{{CountryCode}}\",\r\n            \"Locale\": {\r\n                \"Id\": \"{{addLocale}}\"\r\n            }\r\n        }\r\n    ],\r\n    \"AdditionalRegistrationNumbers\": [\r\n        {\r\n            // \"Id\": \"{{registrationNumberId}}\", //Before using this run get employee by id.\r\n            \"RegistrationNumberType\": {\r\n                \"Id\": \"{{regnumtype}}\"\r\n            },\r\n            \"RegistrationNumber\": \"1234567890\"\r\n        },\r\n        {\r\n            \"RegistrationNumberType\": {\r\n                \"Id\": \"{{regnumtypevat}}\"\r\n            },\r\n            \"RegistrationNumber\": \"0987654321\"\r\n        }\r\n    ],\r\n    \"PhoneNumbers\": [\r\n        {\r\n            // \"Id\": \"{{phoneNumberId}}\", //Before using this run get employee by id.\r\n            \"PhoneNumberType\": {\r\n                \"Id\": \"{{phoneType_Person}}\"\r\n            },\r\n            \"Number\": \"{{phoneNumber1}}\",\r\n            \"IsMainNumber\": false\r\n        },\r\n        {\r\n            \"PhoneNumberType\": {\r\n                \"Id\": \"{{phoneType_Person}}\"\r\n            },\r\n            \"Number\": \"{{phoneNumber}}\",\r\n            \"IsMainNumber\": true\r\n        }\r\n    ],\r\n    \"EmailAddresses\": [\r\n        {\r\n            // \"Id\": \"{{emailAddressId}}\", //Before using this run get employee by id.\r\n            \"EmailType\": {\r\n                \"Id\": \"{{emailType_Person}}\"\r\n            },\r\n            \"EmailAddress\": \"{{emailAdd}}\",\r\n            \"IsMainEmail\": false\r\n        },\r\n        {\r\n            \"EmailType\": {\r\n                \"Id\": \"{{emailType_Person}}\"\r\n            },\r\n            \"EmailAddress\": \"{{emailAdd1}}\",\r\n            \"IsMainEmail\": true\r\n        }\r\n    ],\r\n    \"BankAccounts\": [\r\n        {\r\n            // \"Id\": \"{{bankAccountId}}\", //Before using this run get employee by id.\r\n            \"Name\": \"{{name}}\",\r\n            \"BranchCode\": \"{{BranchCode}}\",\r\n            \"AccountNumber\": \"{{AccountNumber}}\",\r\n            \"IBan\": \"{{IBan}}\",\r\n            \"BicSwift\": \"{{BicSwift}}\"\r\n        },\r\n        {\r\n            \"Name\": \"{{Lname}}\",\r\n            \"BranchCode\": \"{{BranchCode1}}\",\r\n            \"AccountNumber\": \"{{AccountNumber1}}\",\r\n            \"IBan\": \"{{IBan1}}\",\r\n            \"BicSwift\": \"{{BicSwift1}}\"\r\n        }\r\n    ]\r\n        // Create test data for dimension and then uncomment this dimension section\r\n\r\n    // ,\r\n    // \"Dimensions\": [\r\n    //     {\r\n    //         \"Dimension\": {\r\n    //             \"Id\": \"{{dimensionId}}\"\r\n    //         },\r\n    //         \"DimensionTags\": [\r\n    //             {\r\n    //                 \"Id\": \"{{dimensionTagId1}}\"\r\n    //             },\r\n    //             {\r\n    //                 \"Id\": \"{{dimensionTagId2}}\"\r\n    //             },\r\n    //             {\r\n    //                 \"Id\": \"{{dimensionTagId3}}\"\r\n    //             }\r\n    //         ]\r\n    //     }\r\n    // ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/employees/{{employeeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}"
							]
						},
						"description": "Patch endpoint to update an Employee for a tenant"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var employeeCode = [\"EK\", \"EH\", \"EM\", \"EK\"]",
							"pm.collectionVariables.set(\"employeeCode\", employeeCode[_.random(employeeCode.length -1)]+_.random(10, 99));",
							"",
							"var termination_Reason = [\"Business Closed\", \"Contract Expired\", \"Change of role\", \"Payroll leaver\",\"Terminated\"]",
							"pm.collectionVariables.set(\"termination_Reason\",termination_Reason[_.random(termination_Reason.length -1)]);",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Email Addresses (Client)",
			"item": [
				{
					"name": "Create Client Email Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"emailAddressId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"emailAddressId\"));\r",
									"\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "// {\r\n//     \"EmailType\": {\r\n//         \"Id\": \"{{emailType_Business}}\"\r\n//     },\r\n//     \"EmailAddress\": \"{{emailAdd}}\",\r\n//     \"IsMainEmail\": false\r\n// }\r\n\r\n// person\r\n{\r\n    \"EmailType\": {\r\n        \"Id\": \"{{emailType_Person}}\"\r\n    },\r\n    \"EmailAddress\": \"{{emailAdd}}\",\r\n    \"IsMainEmail\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/email-addresses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"email-addresses"
							]
						},
						"description": "Post endpoint to create a new Email Address for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Client Email",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/email-addresses/{{emailAddressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"email-addresses",
								"{{emailAddressId}}"
							]
						},
						"description": "Delete endpoint to remove an Email Address from an entity"
					},
					"response": []
				},
				{
					"name": "Get all Client Email Addresses",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/email-addresses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"email-addresses"
							]
						},
						"description": "Get endpoint to return all Email Addresses for an entity"
					},
					"response": []
				},
				{
					"name": "Get Client Email Address by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/email-addresses/{{emailAddressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"email-addresses",
								"{{emailAddressId}}"
							]
						},
						"description": "Get endpoint to return an Email Address for an entity"
					},
					"response": []
				},
				{
					"name": "Update Client Email Address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"EmailAddress\": \"{{emailAdd}}\",\r\n\t\"IsMainEmail\":false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/email-addresses/{{emailAddressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"email-addresses",
								"{{emailAddressId}}"
							]
						},
						"description": "Patch endpoint to update an Email Address for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Email Addresses (Contact)",
			"item": [
				{
					"name": "Create Contact Email Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"emailAddressId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"emailAddressId\"));\r",
									"\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"EmailType\": {\r\n        \"Id\": \"{{emailType_Business}}\"\r\n    },\r\n    \"EmailAddress\": \"{{emailAdd}}\",\r\n    \"IsMainEmail\": false\r\n}\r\n\r\n//// person\r\n// {\r\n//     \"EmailType\": {\r\n//         \"Id\": \"{{emailType_Person}}\"\r\n//     },\r\n//     \"EmailAddress\": \"{{emailAdd}}\",\r\n//     \"IsMainEmail\": false\r\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/email-addresses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"email-addresses"
							]
						},
						"description": "Post endpoint to create a new Email Address for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Contact Email",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/email-addresses/{{emailAddressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"email-addresses",
								"{{emailAddressId}}"
							]
						},
						"description": "Delete endpoint to remove an Email Address from an entity"
					},
					"response": []
				},
				{
					"name": "Get all Contact Email Addresses",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/email-addresses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"email-addresses"
							]
						},
						"description": "Get endpoint to return all Email Addresses for an entity"
					},
					"response": []
				},
				{
					"name": "Get Contact Email Address by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/email-addresses/{{emailAddressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"email-addresses",
								"{{emailAddressId}}"
							]
						},
						"description": "Get endpoint to return an Email Address for an entity"
					},
					"response": []
				},
				{
					"name": "Update Contact Email Address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"EmailAddress\": \"{{emailAdd}}\",\r\n\t\"IsMainEmail\":false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/email-addresses/{{emailAddressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"email-addresses",
								"{{emailAddressId}}"
							]
						},
						"description": "Patch endpoint to update an Email Address for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Email Addresses (Customer)",
			"item": [
				{
					"name": "Create Customer Email Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"emailAddressId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"emailAddressId\"));\r",
									"\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"EmailType\": {\r\n        \"Id\": \"{{emailType_Business}}\"\r\n    },\r\n    \"EmailAddress\": \"{{emailAdd}}\",\r\n    \"IsMainEmail\": false\r\n}\r\n\r\n//// person\r\n// {\r\n//     \"EmailType\": {\r\n//         \"Id\": \"{{emailType_Person}}\"\r\n//     },\r\n//     \"EmailAddress\": \"{{emailAdd}}\",\r\n//     \"IsMainEmail\": false\r\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/email-addresses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"email-addresses"
							]
						},
						"description": "Post endpoint to create a new Email Address for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Customer Email",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/email-addresses/{{emailAddressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"email-addresses",
								"{{emailAddressId}}"
							]
						},
						"description": "Delete endpoint to remove an Email Address from an entity"
					},
					"response": []
				},
				{
					"name": "Get all Customer Email Addresses",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/email-addresses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"email-addresses"
							]
						},
						"description": "Get endpoint to return all Email Addresses for an entity"
					},
					"response": []
				},
				{
					"name": "Get Customer Email Address by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/email-addresses/{{emailAddressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"email-addresses",
								"{{emailAddressId}}"
							]
						},
						"description": "Get endpoint to return an Email Address for an entity"
					},
					"response": []
				},
				{
					"name": "Update Customer Email Address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"EmailAddress\": \"{{emailAdd}}\",\r\n\t\"IsMainEmail\":false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/email-addresses/{{emailAddressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"email-addresses",
								"{{emailAddressId}}"
							]
						},
						"description": "Patch endpoint to update an Email Address for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Email Addresses (Employee)",
			"item": [
				{
					"name": "Create Employee Email Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"emailAddressId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"emailAddressId\"));\r",
									"\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"EmailType\": {\r\n        \"Id\": \"{{emailType_Person}}\"\r\n    },\r\n    \"EmailAddress\": \"{{emailAdd}}\",\r\n    \"IsMainEmail\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/email-addresses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"email-addresses"
							]
						},
						"description": "Post endpoint to create a new Email Address for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Employee Email",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/email-addresses/{{emailAddressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"email-addresses",
								"{{emailAddressId}}"
							]
						},
						"description": "Delete endpoint to remove an Email Address from an entity"
					},
					"response": []
				},
				{
					"name": "Get all Employee Email Addresses",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/email-addresses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"email-addresses"
							]
						},
						"description": "Get endpoint to return all Email Addresses for an entity"
					},
					"response": []
				},
				{
					"name": "Get Employee Email Address by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/email-addresses/{{emailAddressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"email-addresses",
								"{{emailAddressId}}"
							]
						},
						"description": "Get endpoint to return an Email Address for an entity"
					},
					"response": []
				},
				{
					"name": "Update Employee Email Address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"EmailAddress\": \"{{emailAdd}}\",\r\n\t\"IsMainEmail\":false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/email-addresses/{{emailAddressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"email-addresses",
								"{{emailAddressId}}"
							]
						},
						"description": "Patch endpoint to update an Email Address for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Email Addresses (Supplier)",
			"item": [
				{
					"name": "Create Supplier Email Address",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"emailAddressId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"emailAddressId\"));\r",
									"\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"EmailType\": {\r\n        \"Id\": \"{{emailType_Business}}\"\r\n    },\r\n    \"EmailAddress\": \"{{emailAdd}}\",\r\n    \"IsMainEmail\": false\r\n}\r\n\r\n//// person\r\n// {\r\n//     \"EmailType\": {\r\n//         \"Id\": \"{{emailType_Person}}\"\r\n//     },\r\n//     \"EmailAddress\": \"{{emailAdd}}\",\r\n//     \"IsMainEmail\": false\r\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/email-addresses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"email-addresses"
							]
						},
						"description": "Post endpoint to create a new Email Address for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Supplier Email",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/email-addresses/{{emailAddressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"email-addresses",
								"{{emailAddressId}}"
							]
						},
						"description": "Delete endpoint to remove an Email Address from an entity"
					},
					"response": []
				},
				{
					"name": "Get all Supplier Email Addresses",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/email-addresses",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"email-addresses"
							]
						},
						"description": "Get endpoint to return all Email Addresses for an entity"
					},
					"response": []
				},
				{
					"name": "Get Supplier Email Address by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/email-addresses/{{emailAddressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"email-addresses",
								"{{emailAddressId}}"
							]
						},
						"description": "Get endpoint to return an Email Address for an entity"
					},
					"response": []
				},
				{
					"name": "Update Supplier Email Address",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"EmailAddress\": \"{{emailAdd}}\",\r\n\t\"IsMainEmail\":false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/email-addresses/{{emailAddressId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"email-addresses",
								"{{emailAddressId}}"
							]
						},
						"description": "Patch endpoint to update an Email Address for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Entity Settings (Employee)",
			"item": [
				{
					"name": "Get Employee Entity Setting By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/setting/{{key}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"setting",
								"{{key}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Employee Entity Settings",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Put Employee Entity Setting",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Value\": \"{{name}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/setting/{{key}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"setting",
								"{{key}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Employee Entity Setting",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/setting/{{key}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"setting",
								"{{key}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Folders",
			"item": [
				{
					"name": "Create Folder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"folderId\",pm.response.json().Id);\r",
									"          console.log(pm.environment.get(\"folderId\"));\r",
									"\r",
									"  // do something\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"  //do something else\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Name\": \"{{$randomCompanyName}}\",\n    \"Classification\": {\n        \"Id\": \"Client\"\n    }\n     ,\n    // \"External\": {\n    //     \"Id\": \"4D39861C-BD7B-438C-9C39-162FE17B820E\",\n    //     \"Source\":\"ERM\"\n    // }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/folders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"folders"
							]
						},
						"description": "Post endpoint to create a new Client container for a tenant"
					},
					"response": []
				},
				{
					"name": "Activate Folder",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/folders/{{folderId}}/activate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"folders",
								"{{folderId}}",
								"activate"
							]
						},
						"description": "Post endpoint to set the isActive flag to true on the items within the given folder."
					},
					"response": []
				},
				{
					"name": "Deactivate Folder",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/folders/{{folderId}}/de-activate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"folders",
								"{{folderId}}",
								"de-activate"
							]
						},
						"description": "Post endpoint to set the isActive flag to false on the items within the given folder."
					},
					"response": []
				},
				{
					"name": "Delete Folder",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "61811819-4A26-4F9F-B4EE-9B4972DFCC14",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/folders/{{folderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"folders",
								"{{folderId}}"
							]
						},
						"description": "Delete endpoint to remove a Client container"
					},
					"response": []
				},
				{
					"name": "Get all Folders",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/folders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"folders"
							]
						},
						"description": "Get endpoint to return all Client container entities for a tenant"
					},
					"response": []
				},
				{
					"name": "Get Folder By Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/folders/{{folderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"folders",
								"{{folderId}}"
							]
						},
						"description": "Get endpoint to return a single Client container belonging to a tenant"
					},
					"response": []
				},
				{
					"name": "Update Folder",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Name\": \"{{$randomCompanyName}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/folders/{{folderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"folders",
								"{{folderId}}"
							]
						},
						"description": "Post endpoint to create a new Client container for a tenant"
					},
					"response": []
				}
			]
		},
		{
			"name": "Phone Numbers (Client)",
			"item": [
				{
					"name": "Create Client Phone Number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"phoneNumberId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"phoneNumberId\"));\r",
									"\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"PhoneNumberType\": {\r\n        \"Id\": \"{{phoneType_Person}}\"\r\n    },\r\n    \"Number\": \"{{phoneNumber}}\",\r\n    \"IsMainNumber\": false\r\n}\r\n//// for business\r\n\r\n// {\r\n//     \"PhoneNumberType\": {\r\n//         \"Id\": \"{{phoneType_Business}}\"\r\n//     },\r\n//     \"Number\": \"{{phoneNumber}}\",\r\n//     \"IsMainNumber\": false\r\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/phone-numbers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"phone-numbers"
							]
						},
						"description": "Post endpoint to create a new Phone Number for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Client Phone Number",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/phone-numbers/{{phoneNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"phone-numbers",
								"{{phoneNumberId}}"
							]
						},
						"description": "Delete endpoint to remove a Phone Number from an entity"
					},
					"response": []
				},
				{
					"name": "Get all Client Phone Numbers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/phone-numbers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"phone-numbers"
							]
						},
						"description": "Get endpoint to return all Phone Numbers for an entity"
					},
					"response": []
				},
				{
					"name": "Get Client Phone Number by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/phone-numbers/{{phoneNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"phone-numbers",
								"{{phoneNumberId}}"
							]
						},
						"description": "Get endpoint to return a Phone Number for an entity"
					},
					"response": []
				},
				{
					"name": "Update Client Phone Number",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Number\": \"{{phoneNumber1}}\",\r\n    \"IsMainNumber\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/phone-numbers/{{phoneNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"phone-numbers",
								"{{phoneNumberId}}"
							]
						},
						"description": "Patch endpoint to update a Phone Number for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Phone Numbers (Contact)",
			"item": [
				{
					"name": "Create Contact Phone Number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"phoneNumberId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"phoneNumberId\"));\r",
									"\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"PhoneNumberType\": {\r\n        \"Id\": \"{{phoneType_Person}}\"\r\n    },\r\n    \"Number\": \"{{phoneNumber}}\",\r\n    \"IsMainNumber\": false\r\n}\r\n//// for business\r\n\r\n// {\r\n//     \"PhoneNumberType\": {\r\n//         \"Id\": \"{{phoneType_Business}}\"\r\n//     },\r\n//     \"Number\": \"{{phoneNumber}}\",\r\n//     \"IsMainNumber\": false\r\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/phone-numbers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"phone-numbers"
							]
						},
						"description": "Post endpoint to create a new Phone Number for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Contact Phone Number",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/phone-numbers/{{phoneNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"phone-numbers",
								"{{phoneNumberId}}"
							]
						},
						"description": "Delete endpoint to remove a Phone Number from an entity"
					},
					"response": []
				},
				{
					"name": "Get all Contact Phone Numbers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/phone-numbers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"phone-numbers"
							]
						},
						"description": "Get endpoint to return all Phone Numbers for an entity"
					},
					"response": []
				},
				{
					"name": "Get Contact Phone Number by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/phone-numbers/{{phoneNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"phone-numbers",
								"{{phoneNumberId}}"
							]
						},
						"description": "Get endpoint to return a Phone Number for an entity"
					},
					"response": []
				},
				{
					"name": "Update Contact Phone Number",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Number\": \"{{phoneNumber1}}\",\r\n    \"IsMainNumber\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contact/{{contactId}}/phone-numbers/{{phoneNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contact",
								"{{contactId}}",
								"phone-numbers",
								"{{phoneNumberId}}"
							]
						},
						"description": "Patch endpoint to update a Phone Number for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Phone Numbers (Customer)",
			"item": [
				{
					"name": "Create Customer Phone Number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"phoneNumberId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"phoneNumberId\"));\r",
									"\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"PhoneNumberType\": {\r\n        \"Id\": \"{{phoneType_Person}}\"\r\n    },\r\n    \"Number\": \"{{phoneNumber}}\",\r\n    \"IsMainNumber\": false\r\n}\r\n//// for business\r\n// {\r\n//     \"PhoneNumberType\": {\r\n//         \"Id\": \"{{phoneType_Business}}\"\r\n//     },\r\n//     \"Number\": \"{{phoneNumber}}\",\r\n//     \"IsMainNumber\": false\r\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/phone-numbers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"phone-numbers"
							]
						},
						"description": "Post endpoint to create a new Phone Number for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Customer Phone Number",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/phone-numbers/{{phoneNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"phone-numbers",
								"{{phoneNumberId}}"
							]
						},
						"description": "Delete endpoint to remove a Phone Number from an entity"
					},
					"response": []
				},
				{
					"name": "Get all Customer Phone Numbers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/phone-numbers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"phone-numbers"
							]
						},
						"description": "Get endpoint to return all Phone Numbers for an entity"
					},
					"response": []
				},
				{
					"name": "Get Customer Phone Number by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/phone-numbers/{{phoneNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"phone-numbers",
								"{{phoneNumberId}}"
							]
						},
						"description": "Get endpoint to return a Phone Number for an entity"
					},
					"response": []
				},
				{
					"name": "Update Customer Phone Number",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Number\": \"{{phoneNumber1}}\",\r\n    \"IsMainNumber\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/phone-numbers/{{phoneNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"phone-numbers",
								"{{phoneNumberId}}"
							]
						},
						"description": "Patch endpoint to update a Phone Number for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Phone Numbers (Employee)",
			"item": [
				{
					"name": "Create Employee Phone Number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"phoneNumberId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"phoneNumberId\"));\r",
									"\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"PhoneNumberType\": {\r\n        \"Id\": \"{{phoneType_Person}}\"\r\n    },\r\n    \"Number\": \"{{phoneNumber}}\",\r\n    \"IsMainNumber\": false\r\n}\r\n//// for business\r\n\r\n// {\r\n//     \"PhoneNumberType\": {\r\n//         \"Id\": \"{{phoneType_Business}}\"\r\n//     },\r\n//     \"Number\": \"{{phoneNumber}}\",\r\n//     \"IsMainNumber\": false\r\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/phone-numbers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"phone-numbers"
							]
						},
						"description": "Post endpoint to create a new Phone Number for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Employee Phone Number",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/phone-numbers/{{phoneNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"phone-numbers",
								"{{phoneNumberId}}"
							]
						},
						"description": "Delete endpoint to remove a Phone Number from an entity"
					},
					"response": []
				},
				{
					"name": "Get all Employee Phone Numbers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/phone-numbers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"phone-numbers"
							]
						},
						"description": "Get endpoint to return all Phone Numbers for an entity"
					},
					"response": []
				},
				{
					"name": "Get Employee Phone Number by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/phone-numbers/{{phoneNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"phone-numbers",
								"{{phoneNumberId}}"
							]
						},
						"description": "Get endpoint to return a Phone Number for an entity"
					},
					"response": []
				},
				{
					"name": "Update Employee Phone Number",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Number\": \"{{phoneNumber1}}\",\r\n    \"IsMainNumber\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/phone-numbers/{{phoneNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"phone-numbers",
								"{{phoneNumberId}}"
							]
						},
						"description": "Patch endpoint to update a Phone Number for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Phone Numbers (Suppliers)",
			"item": [
				{
					"name": "Create Supplier Phone Number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"phoneNumberId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"phoneNumberId\"));\r",
									"\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"PhoneNumberType\": {\r\n        \"Id\": \"{{phoneType_Person}}\"\r\n    },\r\n    \"Number\": \"{{phoneNumber}}\",\r\n    \"IsMainNumber\": false\r\n}\r\n//// for business\r\n\r\n// {\r\n//     \"PhoneNumberType\": {\r\n//         \"Id\": \"{{phoneType_Business}}\"\r\n//     },\r\n//     \"Number\": \"{{phoneNumber}}\",\r\n//     \"IsMainNumber\": false\r\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/phone-numbers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"phone-numbers"
							]
						},
						"description": "Post endpoint to create a new Phone Number for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Supplier Phone Number",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/phone-numbers/{{phoneNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"phone-numbers",
								"{{phoneNumberId}}"
							]
						},
						"description": "Delete endpoint to remove a Phone Number from an entity"
					},
					"response": []
				},
				{
					"name": "Get all Suppliers Phone Numbers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/phone-numbers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"phone-numbers"
							]
						},
						"description": "Get endpoint to return all Phone Numbers for an entity"
					},
					"response": []
				},
				{
					"name": "Get Supplier Phone Number by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/phone-numbers/{{phoneNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"phone-numbers",
								"{{phoneNumberId}}"
							]
						},
						"description": "Get endpoint to return a Phone Number for an entity"
					},
					"response": []
				},
				{
					"name": "Update Supplier Phone Number",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n   \"Number\": \"{{phoneNumber1}}\",\r\n    \"IsMainNumber\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/phone-numbers/{{phoneNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"phone-numbers",
								"{{phoneNumberId}}"
							]
						},
						"description": "Patch endpoint to update a Phone Number for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Notes (Client v2)",
			"item": [
				{
					"name": "Create Client Note",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"Title\":\"{{$randomWord}}\",\r\n    // Note - To use mention we need existing userid from sandbox and we need to pass @username -- sample example is given below - which works :)\r\n    \"FormattedBody\":\"@dave mawar {{$randomPhrase}}\",\r\n    \"Mentions\": [\r\n      {\r\n        \"UserId\": \"C6E022B1-EDFB-D994-9C5B-665B4E4D435A\",\r\n        \"Name\": \"dave mawar\"\r\n      }\r\n    ],\r\n    \"NotificationTags\": [\r\n      {\r\n        \"Key\": \"Product\",\r\n        \"Value\": \"{{$randomProductAdjective}}\"\r\n      },\r\n        {\r\n        \"Key\": \"Email\",\r\n        \"Value\": \"{{$randomExampleEmail}}\"\r\n      }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/notes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"notes"
							]
						},
						"description": "Post endpoint to create a new Note for a Business entity"
					},
					"response": []
				},
				{
					"name": "Delete Client Note",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/notes/{{noteId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"notes",
								"{{noteId}}"
							]
						},
						"description": "Delete endpoint to remove a Note for a Business entity"
					},
					"response": []
				},
				{
					"name": "Delete all Client Notes",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/notes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"notes"
							]
						},
						"description": "Delete endpoint to remove a Note for a Business entity"
					},
					"response": []
				},
				{
					"name": "Get Client Notes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json()\r",
									"const notes=response.map(notes => notes.Id);\r",
									"// console.log(notes);\r",
									"pm.environment.set(\"noteId\",notes);\r",
									"// console.log(pm.environment.get(\"noteId\"));\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/notes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"notes"
							]
						},
						"description": "Get endpoint to retrieve all Notes for a Business entity"
					},
					"response": []
				},
				{
					"name": "Get Client Note by Id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const noteIds=pm.environment.get(\"noteId\");\r",
									"pm.environment.set(\"noteId\",noteIds.shift());\r",
									"console.log(pm.environment.get(\"currentnoteId\"));\r",
									"if(Array.isArray(noteIds) && noteIds.length>0)\r",
									"{\r",
									"    postman.setNextRequest('Get Client Note by Id');\r",
									"}\r",
									"else\r",
									"{\r",
									"    postman.setNextRequest(null);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/notes/{{noteId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"notes",
								"{{noteId}}"
							]
						},
						"description": "Get endpoint to retrieve a Note for a Business entity"
					},
					"response": []
				},
				{
					"name": "Update Client Note",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"Title\":\"{{$randomWord}}\",\r\n    \"FormattedBody\":\"@dave mawar {{$randomPhrase}}\",\r\n    \"Mentions\": [\r\n      {\r\n        \"UserId\": \"C6E022B1-EDFB-D994-9C5B-665B4E4D435A\",\r\n        \"Name\": \"dave mawar\"\r\n      }\r\n    ],\r\n    \"NotificationTags\": [\r\n      {\r\n        \"Key\": \"Product\",\r\n        \"Value\": \"{{$randomProductAdjective}}\"\r\n      },\r\n        {\r\n        \"Key\": \"Email\",\r\n        \"Value\": \"{{$randomExampleEmail}}\"\r\n      }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/notes/{{noteId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"notes",
								"{{noteId}}"
							]
						},
						"description": "Post endpoint to create a new Note for a Business entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Notes (Contact)",
			"item": [
				{
					"name": "Create Contact Note",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Title\": \"{{$randomWord}}\",\r\n    // Note - To use mention we need existing userid from sandbox and we need to pass @username -- sample example is given below - which works :)\r\n    \"FormattedBody\": \"@dave mawar {{$randomPhrase}}\",\r\n    \"Mentions\": [\r\n        {\r\n            \"UserId\": \"C6E022B1-EDFB-D994-9C5B-665B4E4D435A\",\r\n            \"Name\": \"dave mawar\"\r\n        }\r\n    ],\r\n    \"NotificationTags\": [\r\n        {\r\n            \"Key\": \"Product\",\r\n            \"Value\": \"{{$randomProductAdjective}}\"\r\n        },\r\n        {\r\n            \"Key\": \"Email\",\r\n            \"Value\": \"{{$randomExampleEmail}}\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/notes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"notes"
							]
						},
						"description": "Post endpoint to create a new Note for a Business entity"
					},
					"response": []
				},
				{
					"name": "Delete Contact Note",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/notes/{{noteId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"notes",
								"{{noteId}}"
							]
						},
						"description": "Delete endpoint to remove a Note for a Business entity"
					},
					"response": []
				},
				{
					"name": "Delete all Contact Notes",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/notes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"notes"
							]
						},
						"description": "Delete endpoint to remove a Note for a Business entity"
					},
					"response": []
				},
				{
					"name": "Get Contact Notes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json()\r",
									"//  console.log(pm.response.json());\r",
									"\r",
									"const notes=response.map(notes => notes.Id);\r",
									"// console.log(notes);\r",
									"pm.environment.set(\"noteId\",notes);\r",
									"// console.log(pm.environment.get(\"noteId\"));\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/notes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"notes"
							]
						},
						"description": "Get endpoint to retrieve all Notes for a Business entity"
					},
					"response": []
				},
				{
					"name": "Get Contact Note by Id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const noteIds=pm.environment.get(\"noteId\");\r",
									"pm.environment.set(\"noteId\",noteIds.shift());\r",
									"// console.log(pm.environment.get(\"currentnoteId\"));\r",
									"if(Array.isArray(noteIds) && noteIds.length>0)\r",
									"{\r",
									"    postman.setNextRequest('Get Client Note by Id');\r",
									"}\r",
									"else\r",
									"{\r",
									"    postman.setNextRequest(null);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/notes/{{noteId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"notes",
								"{{noteId}}"
							]
						},
						"description": "Get endpoint to retrieve a Note for a Business entity"
					},
					"response": []
				},
				{
					"name": "Update Contact Note",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"Title\":\"{{$randomWord}}\",\r\n    \"FormattedBody\":\"@dave mawar {{$randomPhrase}}\",\r\n    \"Mentions\": [\r\n      {\r\n        \"UserId\": \"C6E022B1-EDFB-D994-9C5B-665B4E4D435A\",\r\n        \"Name\": \"dave mawar\"\r\n      }\r\n    ],\r\n    \"NotificationTags\": [\r\n      {\r\n        \"Key\": \"Product\",\r\n        \"Value\": \"{{$randomProductAdjective}}\"\r\n      },\r\n        {\r\n        \"Key\": \"Email\",\r\n        \"Value\": \"{{$randomExampleEmail}}\"\r\n      }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/notes/{{noteId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"notes",
								"{{noteId}}"
							]
						},
						"description": "Post endpoint to create a new Note for a Business entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Notes (Employee)",
			"item": [
				{
					"name": "Create Employee Note",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Title\": \"{{$randomWord}}\",\r\n    // Note - To use mention we need existing userid from sandbox and we need to pass @username -- sample example is given below - which works :)\r\n    \"FormattedBody\": \"@dave mawar {{$randomPhrase}}\",\r\n    \"Mentions\": [\r\n        {\r\n            \"UserId\": \"C6E022B1-EDFB-D994-9C5B-665B4E4D435A\",\r\n            \"Name\": \"dave mawar\"\r\n        }\r\n    ],\r\n    \"NotificationTags\": [\r\n        {\r\n            \"Key\": \"Product\",\r\n            \"Value\": \"{{$randomProductAdjective}}\"\r\n        },\r\n        {\r\n            \"Key\": \"Email\",\r\n            \"Value\": \"{{$randomExampleEmail}}\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/Notes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"Notes"
							]
						},
						"description": "Post endpoint to create a new Note for a Business entity"
					},
					"response": []
				},
				{
					"name": "Delete Employee Note",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/Notes/{{noteId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"Notes",
								"{{noteId}}"
							]
						},
						"description": "Delete endpoint to remove a Note for a Business entity"
					},
					"response": []
				},
				{
					"name": "Delete all Employee Notes",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/Notes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"Notes"
							]
						},
						"description": "Delete endpoint to remove a Note for a Business entity"
					},
					"response": []
				},
				{
					"name": "Get Employee Notes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json()\r",
									"//  console.log(pm.response.json());\r",
									"\r",
									"const notes=response.map(notes => notes.Id);\r",
									"// console.log(notes);\r",
									"pm.environment.set(\"noteId\",notes);\r",
									"// console.log(pm.environment.get(\"noteId\"));\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/Notes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"Notes"
							]
						},
						"description": "Get endpoint to retrieve all Notes for a Business entity"
					},
					"response": []
				},
				{
					"name": "Get Employee Note by Id",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const noteIds=pm.environment.get(\"noteId\");\r",
									"pm.environment.set(\"noteId\",noteIds.shift());\r",
									"// console.log(pm.environment.get(\"currentnoteId\"));\r",
									"if(Array.isArray(noteIds) && noteIds.length>0)\r",
									"{\r",
									"    postman.setNextRequest('Get Client Note by Id');\r",
									"}\r",
									"else\r",
									"{\r",
									"    postman.setNextRequest(null);\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/Notes/{{noteId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"Notes",
								"{{noteId}}"
							]
						},
						"description": "Get endpoint to retrieve a Note for a Business entity"
					},
					"response": []
				},
				{
					"name": "Update Employee Note",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"Title\":\"{{$randomWord}}\",\r\n    \"FormattedBody\":\"@dave mawar {{$randomPhrase}}\",\r\n    \"Mentions\": [\r\n      {\r\n        \"UserId\": \"C6E022B1-EDFB-D994-9C5B-665B4E4D435A\",\r\n        \"Name\": \"dave mawar\"\r\n      }\r\n    ],\r\n    \"NotificationTags\": [\r\n      {\r\n        \"Key\": \"Product\",\r\n        \"Value\": \"{{$randomProductAdjective}}\"\r\n      },\r\n        {\r\n        \"Key\": \"Email\",\r\n        \"Value\": \"{{$randomExampleEmail}}\"\r\n      }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/Notes/{{noteId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"Notes",
								"{{noteId}}"
							]
						},
						"description": "Post endpoint to create a new Note for a Business entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Registration Numbers (Client)",
			"item": [
				{
					"name": "Create Client Registration Number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"registrationNumberId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"registrationNumberId\"));\r",
									"\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"RegistrationNumberType\": {\r\n        \"Id\": \"{{regnumtype}}\"\r\n    },\r\n    \"RegistrationNumber\": \"1234567890\"\r\n}\r\n// //for business\r\n// {\r\n//     \"RegistrationNumberType\": {\r\n//         \"Id\": \"{{RegNum_Business}}\"\r\n//     },\r\n//     \"RegistrationNumber\": \"1234567890\"\r\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/registration-numbers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"registration-numbers"
							]
						},
						"description": "Post endpoint to create a new Registration Number for an entity"
					},
					"response": []
				},
				{
					"name": "Get all Client Registration Numbers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/registration-numbers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"registration-numbers"
							]
						},
						"description": "Get endpoint to return all Registration Numbers for an entity"
					},
					"response": []
				},
				{
					"name": "Get Client Registration Number by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/registration-numbers/{{registrationNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"registration-numbers",
								"{{registrationNumberId}}"
							]
						},
						"description": "Get endpoint to return a Registration Number for an entity"
					},
					"response": []
				},
				{
					"name": "Update Client Registration Number",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"RegistrationNumber\":\"1122334455\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/registration-numbers/{{registrationNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"registration-numbers",
								"{{registrationNumberId}}"
							]
						},
						"description": "Patch endpoint to update a Registration Number for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Client Registration Number",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/registration-numbers/{{registrationNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"registration-numbers",
								"{{registrationNumberId}}"
							]
						},
						"description": "Delete endpoint to remove a Registration Number from an entity"
					},
					"response": []
				},
				{
					"name": "Verify Client Registration Number",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"Verified\":\"Verified\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/registration-numbers/{{registrationNumberId}}/verified",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"registration-numbers",
								"{{registrationNumberId}}",
								"verified"
							]
						},
						"description": "Post endpoint to create a new Registration Number for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Registration Numbers (Customer)",
			"item": [
				{
					"name": "Create Customer Registration Number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"registrationNumberId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"registrationNumberId\"));\r",
									"\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"RegistrationNumberType\": {\r\n        \"Id\": \"{{regnumtype}}\"\r\n    },\r\n    \"RegistrationNumber\": \"1234567890\"\r\n}\r\n// //for business\r\n// {\r\n//     \"RegistrationNumberType\": {\r\n//         \"Id\": \"{{RegNum_Business}}\"\r\n//     },\r\n//     \"RegistrationNumber\": \"1234567890\"\r\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/registration-numbers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"registration-numbers"
							]
						},
						"description": "Post endpoint to create a new Registration Number for an entity"
					},
					"response": []
				},
				{
					"name": "Get all Customer Registration Numbers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/registration-numbers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"registration-numbers"
							]
						},
						"description": "Get endpoint to return all Registration Numbers for an entity"
					},
					"response": []
				},
				{
					"name": "Get Customer Registration Number by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/registration-numbers/{{registrationNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"registration-numbers",
								"{{registrationNumberId}}"
							]
						},
						"description": "Get endpoint to return a Registration Number for an entity"
					},
					"response": []
				},
				{
					"name": "Update Customer Registration Number",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"RegistrationNumber\":\"1122334455\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/registration-numbers/{{registrationNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"registration-numbers",
								"{{registrationNumberId}}"
							]
						},
						"description": "Patch endpoint to update a Registration Number for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Customer Registration Number",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/registration-numbers/{{registrationNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"registration-numbers",
								"{{registrationNumberId}}"
							]
						},
						"description": "Delete endpoint to remove a Registration Number from an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Registration Numbers (Employee)",
			"item": [
				{
					"name": "Create Employee Registration Number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"registrationNumberId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"registrationNumberId\"));\r",
									"\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"RegistrationNumberType\": {\r\n        \"Id\": \"{{regnumtype}}\"\r\n    },\r\n    \"RegistrationNumber\": \"1234567890\"\r\n}\r\n// //for business\r\n// {\r\n//     \"RegistrationNumberType\": {\r\n//         \"Id\": \"{{RegNum_Business}}\"\r\n//     },\r\n//     \"RegistrationNumber\": \"1234567890\"\r\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/registration-numbers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"registration-numbers"
							]
						},
						"description": "Post endpoint to create a new Registration Number for an entity"
					},
					"response": []
				},
				{
					"name": "Get all Employee Registration Numbers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/registration-numbers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"registration-numbers"
							]
						},
						"description": "Get endpoint to return all Registration Numbers for an entity"
					},
					"response": []
				},
				{
					"name": "Get Employee Registration Number by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/registration-numbers/{{registrationNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"registration-numbers",
								"{{registrationNumberId}}"
							]
						},
						"description": "Get endpoint to return a Registration Number for an entity"
					},
					"response": []
				},
				{
					"name": "Update Employee Registration Number",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"RegistrationNumber\":\"1122334455\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/registration-numbers/{{registrationNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"registration-numbers",
								"{{registrationNumberId}}"
							]
						},
						"description": "Patch endpoint to update a Registration Number for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Employee Registration Number",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/employees/{{employeeId}}/registration-numbers/{{registrationNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"employees",
								"{{employeeId}}",
								"registration-numbers",
								"{{registrationNumberId}}"
							]
						},
						"description": "Delete endpoint to remove a Registration Number from an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Registration Numbers (Supplier)",
			"item": [
				{
					"name": "Create Supplier Registration Number",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.json().Id) {\r",
									"  console.log(\"id was found!\");\r",
									"\r",
									"    pm.environment.set(\"registrationNumberId\",pm.response.json().Id);\r",
									"              console.log(pm.environment.get(\"registrationNumberId\"));\r",
									"\r",
									"} else {\r",
									"  console.log(\"no id ...\");\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"RegistrationNumberType\": {\r\n        \"Id\": \"{{regnumtype}}\"\r\n    },\r\n    \"RegistrationNumber\": \"1234567890\"\r\n}\r\n// //for business\r\n// {\r\n//     \"RegistrationNumberType\": {\r\n//         \"Id\": \"{{RegNum_Business}}\"\r\n//     },\r\n//     \"RegistrationNumber\": \"1234567890\"\r\n// }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/registration-numbers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"registration-numbers"
							]
						},
						"description": "Post endpoint to create a new Registration Number for an entity"
					},
					"response": []
				},
				{
					"name": "Get all Supplier Registration Numbers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/registration-numbers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"registration-numbers"
							]
						},
						"description": "Get endpoint to return all Registration Numbers for an entity"
					},
					"response": []
				},
				{
					"name": "Get Supplier Registration Number by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/registration-numbers/{{registrationNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"registration-numbers",
								"{{registrationNumberId}}"
							]
						},
						"description": "Get endpoint to return a Registration Number for an entity"
					},
					"response": []
				},
				{
					"name": "Update Supplier Registration Number",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"RegistrationNumber\":\"1122334455\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/registration-numbers/{{registrationNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"registration-numbers",
								"{{registrationNumberId}}"
							]
						},
						"description": "Patch endpoint to update a Registration Number for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Supplier Registration Number",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/registration-numbers/{{registrationNumberId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"registration-numbers",
								"{{registrationNumberId}}"
							]
						},
						"description": "Delete endpoint to remove a Registration Number from an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Relationships (Client)",
			"item": [
				{
					"name": "Post Client Relationship",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"RelationshipType\": { \"Id\":\"{{relationshipTypeId}}\" },\r\n\t\"RelatedEntity\": { \"Id\":\"e6d003ae-f818-60dd-e9bb-ac7beab4bc44\"},\r\n\t\"Direction\": \"LeftToRight\",\r\n    \"IsPrimary\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/relationships",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"relationships"
							]
						},
						"description": "Post endpoint to create a new Relationship for an entity"
					},
					"response": []
				},
				{
					"name": "Put Client Relationship",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\r\n    \"Id\": \"{{relationshipId}}\",\r\n\t\"RelationshipType\": { \"Id\":\"{{relationshipTypeId}}\" },\r\n\t\"RelatedEntity\": { \"Id\":\"e6d003ae-f818-60dd-e9bb-ac7beab4bc44\"},\r\n\t\"Direction\": \"LeftToRight\",\r\n    \"IsPrimary\": false\r\n}]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/relationships",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"relationships"
							]
						},
						"description": "Post endpoint to create a new Relationship for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Client Relationship",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/relationships/{{relationshipId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"relationships",
								"{{relationshipId}}"
							]
						},
						"description": "Delete endpoint to remove a Relationship from an entity"
					},
					"response": []
				},
				{
					"name": "Get all Client Relationships",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/relationships",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"relationships"
							]
						},
						"description": "Get endpoint to return all Relationships for an entity"
					},
					"response": []
				},
				{
					"name": "Get Client Relationship by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/relationships/{{relationshipId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"relationships",
								"{{relationshipId}}"
							]
						},
						"description": "Get endpoint to return a Relationship for an entity"
					},
					"response": []
				},
				{
					"name": "Get Client Available Connections",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/relationship-types/{{relationshipTypeId}}/available-connections/{{direction}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"relationship-types",
								"{{relationshipTypeId}}",
								"available-connections",
								"{{direction}}"
							]
						},
						"description": "Get endpoint to return all Relationships for an entity"
					},
					"response": []
				},
				{
					"name": "Get Client Relationship Types",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/relationship-types",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"relationship-types"
							]
						},
						"description": "Get endpoint to return all Relationships for an entity"
					},
					"response": []
				},
				{
					"name": "Update Client Relationship",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"EndDate\":\"2020-02-02\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/relationships/{{relationshipId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"relationships",
								"{{relationshipId}}"
							]
						},
						"description": "Patch endpoint to update a Relationship for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Relationships (Contact)",
			"item": [
				{
					"name": "Post Contact Relationship",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"RelationshipType\": { \"Id\":\"{{relationshipTypeId}}\" },\r\n\t\"RelatedEntity\": { \"Id\":\"e6d003ae-f818-60dd-e9bb-ac7beab4bc44\"},\r\n\t\"Direction\": \"LeftToRight\",\r\n    \"IsPrimary\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/relationships",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"relationships"
							]
						},
						"description": "Post endpoint to create a new Relationship for an entity"
					},
					"response": []
				},
				{
					"name": "Put Contact Relationship",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "[{\r\n    \"Id\": \"{{relationshipId}}\",\r\n\t\"RelationshipType\": { \"Id\":\"{{relationshipTypeId}}\" },\r\n\t\"RelatedEntity\": { \"Id\":\"e6d003ae-f818-60dd-e9bb-ac7beab4bc44\"},\r\n\t\"Direction\": \"LeftToRight\",\r\n    \"IsPrimary\": false\r\n}]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/relationships",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"relationships"
							]
						},
						"description": "Post endpoint to create a new Relationship for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Contact Relationship",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/relationships/{{relationshipId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"relationships",
								"{{relationshipId}}"
							]
						},
						"description": "Delete endpoint to remove a Relationship from an entity"
					},
					"response": []
				},
				{
					"name": "Get all Contact Relationships",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/relationships",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"relationships"
							]
						},
						"description": "Get endpoint to return all Relationships for an entity"
					},
					"response": []
				},
				{
					"name": "Get Contact Relationship by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/relationships/{{relationshipId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"relationships",
								"{{relationshipId}}"
							]
						},
						"description": "Get endpoint to return a Relationship for an entity"
					},
					"response": []
				},
				{
					"name": "Get Contact Available Connections",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/relationship-types/{{relationshipTypeId}}/available-connections/{{direction}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"relationship-types",
								"{{relationshipTypeId}}",
								"available-connections",
								"{{direction}}"
							]
						},
						"description": "Get endpoint to return all Relationships for an entity"
					},
					"response": []
				},
				{
					"name": "Get Contact Relationship Types",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/relationship-types",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"relationship-types"
							]
						},
						"description": "Get endpoint to return all Relationships for an entity"
					},
					"response": []
				},
				{
					"name": "Update Contact Relationship",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"EndDate\":\"2020-02-02\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/contacts/{{contactId}}/relationships/{{relationshipId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"contacts",
								"{{contactId}}",
								"relationships",
								"{{relationshipId}}"
							]
						},
						"description": "Patch endpoint to update a Relationship for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Relationships (Customer)",
			"item": [
				{
					"name": "Post Customer Relationship",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"RelationshipType\": { \"Id\":\"c3791c5f-3d9f-4eed-b34a-6cc4d42cc24c\" },\r\n\t\"RelatedEntity\": { \"Id\":\"e6d003ae-f818-60dd-e9bb-ac7beab4bc44\"},\r\n\t\"StartDate\":\"2002-01-01\",\r\n\t\"EndDate\":\"2010-01-01\",\r\n\t\"Properties\":\"{}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/relationships",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"relationships"
							]
						},
						"description": "Post endpoint to create a new Relationship for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Customer Relationship",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/relationships/{{relationshipId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"relationships",
								"{{relationshipId}}"
							]
						},
						"description": "Delete endpoint to remove a Relationship from an entity"
					},
					"response": []
				},
				{
					"name": "Get all Customers Relationships",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/relationships",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"relationships"
							]
						},
						"description": "Get endpoint to return all Relationships for an entity"
					},
					"response": []
				},
				{
					"name": "Get Customer Relationship by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/relationships/{{relationshipId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"relationships",
								"{{relationshipId}}"
							]
						},
						"description": "Get endpoint to return a Relationship for an entity"
					},
					"response": []
				},
				{
					"name": "Update Customer Relationship",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"EndDate\":\"2020-02-02\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/customers/{{customerId}}/relationships/{{relationshipId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"customers",
								"{{customerId}}",
								"relationships",
								"{{relationshipId}}"
							]
						},
						"description": "Patch endpoint to update a Relationship for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Relationships (Supplier)",
			"item": [
				{
					"name": "Post Supplier Relationship",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"RelationshipType\": { \"Id\":\"c3791c5f-3d9f-4eed-b34a-6cc4d42cc24c\" },\r\n\t\"RelatedEntity\": { \"Id\":\"e6d003ae-f818-60dd-e9bb-ac7beab4bc44\"},\r\n\t\"StartDate\":\"2002-01-01\",\r\n\t\"EndDate\":\"2010-01-01\",\r\n\t\"Properties\":\"{}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/relationships",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"relationships"
							]
						},
						"description": "Post endpoint to create a new Relationship for an entity"
					},
					"response": []
				},
				{
					"name": "Delete Supplier Relationship",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/relationships/{{relationshipId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"relationships",
								"{{relationshipId}}"
							]
						},
						"description": "Delete endpoint to remove a Relationship from an entity"
					},
					"response": []
				},
				{
					"name": "Get all Suppliers Relationships",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/relationships",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"relationships"
							]
						},
						"description": "Get endpoint to return all Relationships for an entity"
					},
					"response": []
				},
				{
					"name": "Get Supplier Relationship by Id",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/relationships/{{relationshipId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"relationships",
								"{{relationshipId}}"
							]
						},
						"description": "Get endpoint to return a Relationship for an entity"
					},
					"response": []
				},
				{
					"name": "Update Supplier Relationship",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"EndDate\":\"2020-02-02\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/relationships/{{relationshipId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"relationships",
								"{{relationshipId}}"
							]
						},
						"description": "Patch endpoint to update a Relationship for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Suppliers",
			"item": [
				{
					"name": "Create Person Supplier",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var supplier = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"supplierId\",supplier.Id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"SupplierCode\": \"DemoSupplierCode\",\n\"Person\": {\n\"Title\": \"Mr\",\n\"FirstNames\": \"Jim\",\n\"MiddleNames\": \"Frederick\",\n\"LastNames\": \"Burns\",\n\"KnownAs\": \"Jimbo\",\n\"Suffixes\": \"MBE\",\n\"Name\" : \"Jim Burns\",\n\"DateOfBirth\": \"1980-05-05\",\n\"SubType\": {\n\"Id\": \"{{defaultPersonSubType}}\"\n},\n\"SubTypeProperties\": \"{ \\\"PropertyA\\\": 100, \\\"PropertyB\\\": \\\"Limited\\\" }\",\n//\"OrgServiceUserId\": \"Can only be supplied from OrgService\",\n//\"OrgServiceBusinessId\": \"Can only be supplied from OrgService\",\n\"Website\": \"www.createcontact.co.uk/sc1\",\n\"Addresses\": [\n{\n\"AddressTypes\": [\n{ \"Id\": \"70e8486a-b1d4-4711-8642-e3506bf9d38b\" }\n],\n\"AddressLine1\": \"742 Evergreen Terrace\",\n\"Province\": \"Springfield\",\n\"City\": \"Manchester\",\n\"PostCode\": \"HO1 12ME\",\n\"CountryCode\": \"UK\",\n\"Name\": \"Home Address\",\n\"Locale\": {\n\"Id\": \"7e6e773d-24fd-ea74-4818-0504460f808d\"\n}\n},\n{\n\"AddressTypes\": [\n{ \"Id\": \"1a320fcf-4a77-4f24-96c6-49f85c0b444f\" }\n],\n\"AddressLine1\": \"35 Shrubland Street\",\n\"AddressLine2\": \"The Green Quarter\",\n\"City\": \"Manchester\",\n\"PostCode\": \"HO5 35ME\",\n\"CountryCode\": \"UK\",\n\"Name\": \"Office Address\",\n\"Locale\": {\n\"Id\": \"7e6e773d-24fd-ea74-4818-0504460f808d\"\n}\n}\n],\n/*\"LinkedAddresses\": [\n{\n\"AddressTypes\": [\n{ \"Id\": \"1a320fcf-4a77-4f24-96c6-49f85c0b444f\" }\n],\n\"Address\": {\n\"Id\": \"{{addressId}}\"\n}\n}\n],*/\n\"PhoneNumbers\" : [\n{\n\"PhoneNumberType\": {\n\"Id\": \"fb98d493-61a8-42fd-ba31-8b986a9c0465\"\n},\n\"Number\": \"0161555991\",\n\"IsMainNumber\":true\n},\n{\n\"PhoneNumberType\": {\n\"Id\": \"c87f5cbf-a0a3-c4cd-89ab-4ae79db1a243\"\n},\n\"Number\": \"0161555992\",\n\"IsMainNumber\":false\n}\n],\n\"EmailAddresses\": [\n{\n\"EmailType\": {\n\"Id\": \"34ab9a82-c2ad-f3ab-78c5-29a05ac75f5c\"\n},\n\"EmailAddress\": \"jimbo@hotmail.com\",\n\"IsMainEmail\": true\n},\n{\n\"EmailType\": {\n\"Id\": \"0a11c52e-3624-e5b4-2519-cc56083a87c1\"\n},\n\"EmailAddress\": \"mark@gmail.com\",\n\"IsMainEmail\": false\n}\n]/*,\n\"External\": {\n\"Id\": \"Insert External Id here\",\n\"Source\": \"external product A\"\n}*/\n}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers"
							]
						},
						"description": "Post endpoint to create a new Person Supplier for a tenant"
					},
					"response": []
				},
				{
					"name": "Create Business Supplier",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var supplier = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"supplierId\",supplier.Id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\"SupplierCode\": \"DemoSupplierCode\",\n\"Business\": {\n\"SubType\": {\n\"Id\": \"{{defaultBusinessSubType}}\"\n},\n\"SubTypeProperties\": \"{ \\\"PropertyA\\\": 100, \\\"PropertyB\\\": \\\"Limited\\\" }\",\n\"Name\": \"Jim Burns\",\n\"Website\": \"www.createcontact.co.uk/sc1\",\n\"IsTaxRegistered\": true,\n\"TaxNumber\": \"123456\",\n//\"OrgServiceBusinessId\": \"Can only be supplied from OrgService\",\n\"Addresses\": [\n{\n\"AddressTypes\": [\n{\n\"Id\": \"53d4da4b-752f-d103-347d-72f2bb305882\"\n}\n],\n\"AddressLine1\": \"742 Evergreen Terrace\",\n\"Province\": \"Springfield\",\n\"City\": \"Manchester\",\n\"PostCode\": \"HO1 12ME\",\n\"CountryCode\": \"UK\",\n\"Name\": \"Home Address\",\n\"Locale\": {\n\"Id\": \"7e6e773d-24fd-ea74-4818-0504460f808d\"\n}\n},\n{\n\"AddressTypes\": [\n{\n\"Id\": \"53d4da4b-752f-d103-347d-72f2bb305882\"\n}\n],\n\"AddressLine1\": \"35 Shrubland Street\",\n\"AddressLine2\": \"The Green Quarter\",\n\"City\": \"Manchester\",\n\"PostCode\": \"HO5 35ME\",\n\"CountryCode\": \"UK\",\n\"Name\": \"Office Address\",\n\"Locale\": {\n\"Id\": \"7e6e773d-24fd-ea74-4818-0504460f808d\"\n}\n}\n],\n/*\"LinkedAddresses\": [\n{\n\"AddressTypes\": [\n{ \"Id\": \"53d4da4b-752f-d103-347d-72f2bb305882\" }\n],\n\"Address\": {\n\"Id\": \"{{addressId}}\"\n}\n}\n],*/\n\"PhoneNumbers\": [\n{\n\"PhoneNumberType\": {\n\"Id\": \"1e79c03a-76ab-0ef4-69a5-111f9ec5ff92\"\n},\n\"Number\": \"0161555991\",\n\"IsMainNumber\": true\n},\n{\n\"PhoneNumberType\": {\n\"Id\": \"e5bce924-0c06-c937-eb3e-4e3ba392ec77\"\n},\n\"Number\": \"0161555992\",\n\"IsMainNumber\": false\n}\n],\n\"EmailAddresses\": [\n{\n\"EmailType\": {\n\"Id\": \"79a01d9a-1a91-8c0a-fa4f-22eec1c478d0\"\n},\n\"EmailAddress\": \"jimbo@hotmail.com\",\n\"IsMainEmail\": true\n},\n{\n\"EmailType\": {\n\"Id\": \"72d5a09b-6422-4af5-9f57-49bdf3f71d03\"\n},\n\"EmailAddress\": \"mark@gmail.com\",\n\"IsMainEmail\": false\n}\n]/*,\n\"External\": {\n\"Id\": \"Insert External Id here\",\n\"Source\": \"external product A\"\n}*/\n}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers"
							]
						},
						"description": "Post endpoint to create a new Business Supplier for a tenant"
					},
					"response": []
				},
				{
					"name": "Update Person Supplier",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"SupplierCode\": \"PatchSupplier\",\n    // \"InactiveDate\": \"2021-06-29\", --Only when Supplier is InActive\n    \"Person\": {\n        \"Title\": \"Mr\",\n        \"FirstNames\": \"first\",\n        \"MiddleNames\": \"middle\",\n        \"LastNames\": \"last\",\n        \"KnownAs\": \"knownAs\",\n        \"Website\": \"https://sage.com\",\n        \"Suffixes\": \"Prefixes\",\n        \"DateOfBirth\": \"1991-01-01\",\n        \"SubTypeProperties\":\"{\\\"Value\\\":\\\"PPPP\\\"}\",\n        \"Name\": \"Person\",\n        \"OrgServiceUserId\": null,\n        \"OrgServiceBusinessId\": null\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}"
							]
						},
						"description": "Patch endpoint to update the specified Person Supplier"
					},
					"response": []
				},
				{
					"name": "Update Business Supplier",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"SupplierCode\": \"PatchBusinessSupplier\",\n    //\"InactiveDate\": \"2021-06-29\", --Only when Supplier is InActive \n    \"Business\": {\n        \"SubTypeProperties\": \"{\\\"Value\\\":\\\"PPPP\\\"}\",\n        \"Name\": \"title\",\n        \"Website\": \"www.Sage.com\",\n        \"OrgServiceBusinessId\": \"d5279024-2a00-4ccc-86b1-8729c0d14879\",\n        \"TradingName\": \"Postman Patch\",\n        \"RegisteredName\": \"Business Supplier Patch\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}"
							]
						},
						"description": "Patch endpoint to update the specified Business Supplier"
					},
					"response": []
				},
				{
					"name": "Get Suppliers",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers"
							]
						},
						"description": "Get endpoint to retrieve all Suppliers belonging to a tenant"
					},
					"response": []
				},
				{
					"name": "Get Supplier by Id",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}"
							]
						},
						"description": "Get endpoint to retrieve a single Supplier belonging to a tenant"
					},
					"response": []
				},
				{
					"name": "Activate Supplier",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/activate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"activate"
							]
						},
						"description": "Post endpoint to set the isActive flag to true on the provided supplier."
					},
					"response": []
				},
				{
					"name": "Deactivate Supplier",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}/de-activate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}",
								"de-activate"
							]
						},
						"description": "Post endpoint to set the isActive flag to false on the provided supplier."
					},
					"response": []
				},
				{
					"name": "Delete Supplier",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/suppliers/{{supplierId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}"
							]
						},
						"description": "Delete endpoint to remove a Supplier"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var supplierCode = [\"RK\", \"JH\", \"SM\", \"CK\"]",
							"pm.collectionVariables.set(\"supplierCode\", supplierCode[_.random(supplierCode.length -1)]+_.random(10, 99));",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Suppliers V2",
			"item": [
				{
					"name": "Create Person Supplier V2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var supplier = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"supplierId\",supplier.Id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Name\": \"{{$randomFullName}}\",\n    \"SupplierCode\": \"{{supplierCode}}\",\n    \"SubType\": {\n        \"Id\": \"{{defaultPersonSubType}}\"\n    },\n    \"SubTypeProperties\": \"{}\",\n    \"OrgServiceBusinessId\": \"{{$guid}}\",\n    \"Website\": \"{{$randomProtocol}}://{{$randomDomainName}}\",\n    \"Person\": {\n        \"Title\": \"{{$randomNamePrefix}}\",\n        \"FirstNames\": \"{{$randomFirstName}}\",\n        \"MiddleNames\": \"{{name}}\",\n        \"LastNames\": \"{{$randomLastName}}\",\n        \"KnownAs\": \"{{$randomJobTitle}}\",\n        \"Suffixes\": \"{{$randomNameSuffix}}\",\n        \"DateOfBirth\": \"{{$isoTimestamp}}\",\n        \"OrgServiceUserId\": \"{{$guid}}\"\n    },\n    \"Addresses\": [\n        {\n            \"AddressTypes\": [\n                {\n                    \"Id\": \"{{addType_Person}}\"\n                }\n            ],\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"Locale\": {\n                \"Id\": \"{{addLocale}}\"\n            }\n        },\n        {\n            \"AddressTypes\": [\n                {\n                    \"Id\": \"{{addType_Person}}\"\n                }\n            ],\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"Province\": \"{{$randomCountry}}\",\n            \"City\": \"{{$randomCity}}\",\n            \"Suburb\": \"{{Suburb}}\",\n            \"PostCode\": \"{{PostCode}}\",\n            \"Name\": \"{{$randomFullName}}\",\n            \"CountryCode\": \"{{CountryCode}}\",\n            \"Locale\": {\n                \"Id\": \"{{addLocale}}\"\n            }\n        }\n    ],\n    \"PhoneNumbers\": [\n        {\n            \"PhoneNumberType\": {\n                \"Id\": \"{{phoneType_Person}}\"\n            },\n            \"Number\": \"{{phoneNumber1}}\",\n            \"IsMainNumber\": false\n        },\n        {\n            \"PhoneNumberType\": {\n                \"Id\": \"{{phoneType_Person}}\"\n            },\n            \"Number\": \"{{phoneNumber}}\",\n            \"IsMainNumber\": true\n        }\n    ],\n    \"EmailAddresses\": [\n        {\n            \"EmailType\": {\n                \"Id\": \"{{emailType_Person}}\"\n            },\n            \"EmailAddress\": \"{{emailAdd}}\",\n            \"IsMainEmail\": false\n        },\n        {\n            \"EmailType\": {\n                \"Id\": \"{{emailType_Person}}\"\n            },\n            \"EmailAddress\": \"{{emailAdd1}}\",\n            \"IsMainEmail\": true\n        }\n    ]\n    // ,\n    //    \"External\": {\n    //     \"Id\": \"{{$guid}}\",\n    //     \"Source\": \"external product A\"\n    // }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/suppliers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"suppliers"
							]
						},
						"description": "Post endpoint to create a new Person Supplier for a tenant"
					},
					"response": []
				},
				{
					"name": "Create Business Supplier V2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var supplier = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"supplierId\",supplier.Id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Name\": \"{{$randomFullName}}\",\n    \"SupplierCode\": \"{{supplierCode}}\",\n    \"SubType\": {\n        \"Id\": \"{{defaultBusinessSubType}}\"\n    },\n    \"SubTypeProperties\": \"{}\",\n    \"OrgServiceBusinessId\": \"{{$guid}}\",\n    \"Website\": \"{{$randomProtocol}}://{{$randomDomainName}}\",\n    \"Business\": {\n        \"TradingName\": \"{{$randomCompanyName}}\",\n        \"RegisteredName\": \"{{$randomBs}}\"\n    },\n    \"Addresses\": [\n        {\n            \"AddressTypes\": [\n                {\n                    \"Id\": \"{{addType_Business}}\"\n                }\n            ],\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"Locale\": {\n                \"Id\": \"{{addLocale}}\"\n            }\n        },\n        {\n            \"AddressTypes\": [\n                {\n                    \"Id\": \"{{addType_Business}}\"\n                }\n            ],\n            \"AddressLine1\": \"{{$randomStreetAddress}}\",\n            \"AddressLine2\": \"{{$randomStreetName}}\",\n            \"Province\": \"{{$randomCountry}}\",\n            \"City\": \"{{$randomCity}}\",\n            \"Suburb\": \"{{Suburb}}\",\n            \"PostCode\": \"{{PostCode}}\",\n            \"Name\": \"{{$randomFullName}}\",\n            \"CountryCode\": \"{{CountryCode}}\",\n            \"Locale\": {\n                \"Id\": \"{{addLocale}}\"\n            }\n        }\n    ],\n    \"PhoneNumbers\": [\n        {\n            \"PhoneNumberType\": {\n                \"Id\": \"{{phoneType_Business}}\"\n            },\n            \"Number\": \"{{phoneNumber1}}\",\n            \"IsMainNumber\": false\n        },\n        {\n            \"PhoneNumberType\": {\n                \"Id\": \"{{phoneType_Business}}\"\n            },\n            \"Number\": \"{{phoneNumber}}\",\n            \"IsMainNumber\": true\n        }\n    ],\n    \"EmailAddresses\": [\n        {\n            \"EmailType\": {\n                \"Id\": \"{{emailType_Business}}\"\n            },\n            \"EmailAddress\": \"{{emailAdd}}\",\n            \"IsMainEmail\": false\n        },\n        {\n            \"EmailType\": {\n                \"Id\": \"{{emailType_Business}}\"\n            },\n            \"EmailAddress\": \"{{emailAdd1}}\",\n            \"IsMainEmail\": true\n        }\n    ]\n    // ,\n    //    \"External\": {\n    //     \"Id\": \"{{$guid}}\",\n    //     \"Source\": \"external product A\"\n    // }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/suppliers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"suppliers"
							]
						},
						"description": "Post endpoint to create a new Business Supplier for a tenant"
					},
					"response": []
				},
				{
					"name": "Update Person Supplier  V2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Name\": \"{{$randomFullName}}\",\n    \"SupplierCode\": \"{{supplierCode}}\",\n    // \"InactiveDate\": {{$isoTimestamp}},\n    \"SubTypeProperties\": \"{}\",\n    \"OrgServiceBusinessId\": \"{{$guid}}\",\n    \"Website\": \"{{$randomProtocol}}://{{$randomDomainName}}\",\n    \"Person\": {\n        \"Title\": \"{{$randomNamePrefix}}\",\n        \"FirstNames\": \"{{$randomFirstName}}\",\n        \"MiddleNames\": \"{{name}}\",\n        \"LastNames\": \"{{$randomLastName}}\",\n        \"KnownAs\": \"{{$randomJobTitle}}\",\n        \"Suffixes\": \"{{$randomNameSuffix}}\",\n        \"DateOfBirth\": \"{{$isoTimestamp}}\",\n        \"OrgServiceUserId\": \"{{$guid}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/suppliers/{{supplierId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}"
							]
						},
						"description": "Patch endpoint to update the specified Person Supplier"
					},
					"response": []
				},
				{
					"name": "Update Business Supplier  V2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"Name\": \"{{$randomFullName}}\",\n    \"SupplierCode\": \"{{supplierCode}}\",\n    // \"InactiveDate\": {{$isoTimestamp}},\n    \"SubTypeProperties\": \"{}\",\n    \"OrgServiceBusinessId\": \"{{$guid}}\",\n    \"Website\": \"{{$randomProtocol}}://{{$randomDomainName}}\",\n    \"Business\": {\n        \"TradingName\": \"{{$randomCompanyName}}\",\n        \"RegisteredName\": \"{{$randomBs}}\"\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/suppliers/{{supplierId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}"
							]
						},
						"description": "Patch endpoint to update the specified Business Supplier"
					},
					"response": []
				},
				{
					"name": "Get Suppliers  V2",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/suppliers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"suppliers"
							]
						},
						"description": "Get endpoint to retrieve all Suppliers belonging to a tenant"
					},
					"response": []
				},
				{
					"name": "Get Supplier by Id  V2",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/suppliers/{{supplierId}}?$expand=Addresses,EmailAddresses,PhoneNumbers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"suppliers",
								"{{supplierId}}"
							],
							"query": [
								{
									"key": "$expand",
									"value": "Addresses,EmailAddresses,PhoneNumbers"
								}
							]
						},
						"description": "Get endpoint to retrieve a single Supplier belonging to a tenant"
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var supplierCode = [\"RK\", \"JH\", \"SM\", \"CK\"]",
							"pm.collectionVariables.set(\"supplierCode\", supplierCode[_.random(supplierCode.length -1)]+_.random(10, 99));",
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "User Assignments",
			"item": [
				{
					"name": "1. Get User Assignments Feature Status",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/user-assignments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"user-assignments"
							]
						}
					},
					"response": []
				},
				{
					"name": "2. Switch User Assignments Feature",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n \"Status\": \"Enabled\"\r\n//  \"Status\": \"Disabled\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/user-assignments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"user-assignments"
							]
						}
					},
					"response": []
				},
				{
					"name": "3. Get All Users Summary",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"/*\r",
									"if (mode = AllWithExclusions) then\r",
									" TotalClients=Total client feature allowance current count and\r",
									" VisibleClients=TotalClients - total user assignment records\r",
									"\r",
									" else if (Mode is NoneWithAdditions)\r",
									"  TotalClients=Total client feature allowance current count and\r",
									"  VisibleClients= total user assignment records\r",
									"  \r",
									"  else if (Mode is All) then \r",
									"  TotalClients=Total client feature allowance current count and\r",
									"  VisibleClients= Total client feature allowance current count\r",
									"  \r",
									"  */"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "page-items",
									"value": "1",
									"disabled": true
								},
								{
									"key": "$orderby",
									"value": "User.LastName,User.FirstName desc",
									"disabled": true
								},
								{
									"key": "$orderby",
									"value": "User.FirstName",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "4. Get Client List with User Assignment Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									" _.each(pm.response.headers.all(), (x_last_upd) => {\r",
									"    if(x_last_upd.key === 'X-LastUpdated') {\r",
									"        pm.environment.set(\"x_last_upd\", x_last_upd.value);\r",
									"    }\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*\r",
									"if(Mode==All or user is admin|BusinessOwner with any mode) Then \r",
									"{\r",
									"    \"List All the client available to a user  AND AccessGranted Flag is True\"\r",
									"}\r",
									"else if (Mode == AllwithExlusion) Then\r",
									"{\r",
									"    \"List All the client available to a user And\"\r",
									"    \"AccessGranted Flag is True  except those that are listed in the UserAssignments table \"\r",
									"\r",
									"}\r",
									"else\r",
									"{\r",
									"\"List All the client available to a user And \"\"\r",
									"\"AccessGranted Flag is false except those that are listed in the UserAssignments table\"\r",
									"\r",
									"}   \r",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"users",
								"{{userId}}"
							],
							"query": [
								{
									"key": "$orderby",
									"value": "Name desc",
									"disabled": true
								},
								{
									"key": "$orderby",
									"value": "ClientCode desc",
									"disabled": true
								},
								{
									"key": "$orderby",
									"value": "IsActive desc",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "IsActive eq false",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "Name eq 'Marcus Effertz'",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "SubType.Name eq 'PLC BusinessSubType'",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "UpdatedAt lt 1684189666691",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "CreatedAt gt 1684189547600",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "IsProspect eq true",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "ClientCode eq 'CK51' or ClientCode eq 'RK89'",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "5.  Get  Users Can Create More Clients",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									" /*\r",
									" Before executing the request create the users in ERM and create the other test data in ERM and Access Control.\r",
									" https://confluence.sage.com/display/SBA/User+Assignments+Test+Data\r",
									"\r",
									"To use the userids in the request see the env. variable\r",
									"- accountOwner\r",
									"- adminUser\r",
									"- stdUser\r",
									"Note :-  \r",
									"- I have allocated the policy of AC control to the principalId used in the postman.\r",
									"- So different users created will not behave same as same pricincipal would be applied for all the users.\r",
									"-  To test the manage user policy - remove the principal allocated to AC and then hit the request\r",
									"*/\r",
									"\r",
									"/*\r",
									"If the given user has the assignment mode of All or AllWithExclusions, then they can create clients up to the feature allowance limit of their license\r",
									"If the given user has the assignment mode of NoneWithAdditions, then they can only create more clients up to the smaller of available limit of the feature allowance for Clients and the available feature allowance for user assignments for the specific user\r",
									"\r",
									"\r",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/users/{{userId}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"users",
								"{{userId}}",
								"status"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get  Users Has Access to specific client",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"/*\r",
									"If (Mode==All) Then\r",
									"\"HasAccess=True\"\r",
									"\r",
									"elseif (Mode==AllWithExclusions) AND (UserAssignments record exists) Then\r",
									"\"HasAccess=False\"\r",
									"else\r",
									"\"HasAccess=True\"\r",
									"\r",
									"elseif (Mode==NoneWithAdditions) AND (UserAssignments record exists) Then\r",
									"\"HasAccess=True\"\r",
									"else\r",
									"\"HasAccess=False\"\r",
									"\r",
									"*/"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/users/{{userId}}/has-access",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"users",
								"{{userId}}",
								"has-access"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Pending Changes For Given User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/users/{{userId}}/changes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"users",
								"{{userId}}",
								"changes"
							]
						}
					},
					"response": []
				},
				{
					"name": "9. Get Users Assigned  To Clients",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/{{clientId}}/assigned-users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"{{clientId}}",
								"assigned-users"
							],
							"query": [
								{
									"key": "page",
									"value": "2",
									"disabled": true
								},
								{
									"key": "page-items",
									"value": "35",
									"disabled": true
								},
								{
									"key": "$orderby",
									"value": "Name desc",
									"disabled": true
								},
								{
									"key": "$orderby",
									"value": "ClientCode desc",
									"disabled": true
								},
								{
									"key": "$orderby",
									"value": "IsActive desc",
									"disabled": true
								},
								{
									"key": "$orderby",
									"value": "SubType.Name",
									"disabled": true
								},
								{
									"key": "page-items",
									"value": "5",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "ClientCode ne 'JH84' or ClientCode ne 'CK66'",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "IsActive eq false",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "Name eq 'Marcus Effertz'",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "SubType.Name eq 'PLC BusinessSubType'",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "UpdatedAt lt 1684189666691",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "CreatedAt gt 1684189547600",
									"disabled": true
								},
								{
									"key": "$filter",
									"value": "IsProspect eq true",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "10. Update User With Changes Applied",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/v2/tenant/{{tenantId}}/clients/users/{{userId}}/changes-complete",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v2",
								"tenant",
								"{{tenantId}}",
								"clients",
								"users",
								"{{userId}}",
								"changes-complete"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get User Assignments",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "X-Idempotency-Key",
								"type": "text",
								"value": "{{$guid}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/users/{{userId}}/assignments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"users",
								"{{userId}}",
								"assignments"
							]
						},
						"description": "Get endpoint to retrieve all Notes for a Person entity"
					},
					"response": []
				},
				{
					"name": "Assign All to User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Context\": \"Customer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/users/{{userId}}/assign-all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"users",
								"{{userId}}",
								"assign-all"
							]
						},
						"description": "Post endpoint to create an Address for an entity"
					},
					"response": []
				},
				{
					"name": "Assign Entity to User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Context\": \"PersonBusiness\",\r\n    \"EntityIds\": [ { \"Id\":\"d577fadd-d031-2f1e-77a9-bbe9f2c62793\" } ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/users/{{userId}}/assign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"users",
								"{{userId}}",
								"assign"
							]
						},
						"description": "Post endpoint to create an Address for an entity"
					},
					"response": []
				},
				{
					"name": "Unassign All from User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Context\": \"Customer\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/users/{{userId}}/unassign-all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"users",
								"{{userId}}",
								"unassign-all"
							]
						},
						"description": "Post endpoint to create an Address for an entity"
					},
					"response": []
				},
				{
					"name": "Unassign Entity from User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{Token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							},
							{
								"key": "X-Idempotency-Key",
								"value": "{{$guid}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Context\": \"PersonBusiness\",\r\n    \"EntityIds\": [ {\r\n        \"Id\":\"d577fadd-d031-2f1e-77a9-bbe9f2c62793\"\r\n    } ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/users/{{userId}}/unassign",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v1",
								"tenant",
								"{{tenantId}}",
								"users",
								"{{userId}}",
								"unassign"
							]
						},
						"description": "Post endpoint to create an Address for an entity"
					},
					"response": []
				}
			]
		},
		{
			"name": "Diagnostics Health Check",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/_diagnostics/health",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"_diagnostics",
						"health"
					]
				},
				"description": "Health check"
			},
			"response": []
		},
		{
			"name": "Get Address Locales",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/address-locales",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"tenant",
						"{{tenantId}}",
						"address-locales"
					]
				},
				"description": "Get endpoint to return all Address Locales for a tenant"
			},
			"response": []
		},
		{
			"name": "Get Address Types",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/sub-types/{{subTypeId}}/address-types",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"tenant",
						"{{tenantId}}",
						"sub-types",
						"{{subTypeId}}",
						"address-types"
					]
				},
				"description": "Get endpoint to return all Address Types for a Subtype"
			},
			"response": []
		},
		{
			"name": "Get Company Statuses",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/sub-types/{{subTypeId}}/company-status",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"tenant",
						"{{tenantId}}",
						"sub-types",
						"{{subTypeId}}",
						"company-status"
					]
				},
				"description": "Get endpoint to return all Company Statuses for a Subtype"
			},
			"response": []
		},
		{
			"name": "Get Countries",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/countries",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"tenant",
						"{{tenantId}}",
						"countries"
					]
				},
				"description": "Get endpoint to return all Company Statuses for a Subtype"
			},
			"response": []
		},
		{
			"name": "Get Email Address Types",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/sub-types/{{subTypeId}}/email-types",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"tenant",
						"{{tenantId}}",
						"sub-types",
						"{{subTypeId}}",
						"email-types"
					]
				},
				"description": "Get endpoint to return all Email Address Types for a Subtype"
			},
			"response": []
		},
		{
			"name": "Get Legislations",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/legislations",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"tenant",
						"{{tenantId}}",
						"legislations"
					]
				},
				"description": "Get endpoint to return all Legislations for a tenant"
			},
			"response": []
		},
		{
			"name": "Get Phone Number Types",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/sub-types/{{subTypeId}}/phone-number-types",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"tenant",
						"{{tenantId}}",
						"sub-types",
						"{{subTypeId}}",
						"phone-number-types"
					]
				},
				"description": "Get endpoint to return all Phone Number Types for a Subtype"
			},
			"response": []
		},
		{
			"name": "Get Registration Number Types",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/sub-types/{{subTypeId}}/registration-number-types",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"tenant",
						"{{tenantId}}",
						"sub-types",
						"{{subTypeId}}",
						"registration-number-types"
					]
				},
				"description": "Get endpoint to return all Registration Number Types for a Subtype"
			},
			"response": []
		},
		{
			"name": "Get Relationship Types",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/sub-types/{{subTypeId}}/relationship-types",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"tenant",
						"{{tenantId}}",
						"sub-types",
						"{{subTypeId}}",
						"relationship-types"
					]
				},
				"description": "Get endpoint to return all Relationship Types for a Subtype"
			},
			"response": []
		},
		{
			"name": "Get SubTypes",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/legislations/{{legislationId}}/sub-types",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"tenant",
						"{{tenantId}}",
						"legislations",
						"{{legislationId}}",
						"sub-types"
					]
				},
				"description": "Get endpoint to return all SubTypes for a Legislation"
			},
			"response": []
		},
		{
			"name": "Get Trading Statuses",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{Token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/v1/tenant/{{tenantId}}/sub-types/{{subTypeId}}/company-status/{{companyStatusId}}/trading-status",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"v1",
						"tenant",
						"{{tenantId}}",
						"sub-types",
						"{{subTypeId}}",
						"company-status",
						"{{companyStatusId}}",
						"trading-status"
					],
					"query": [
						{
							"key": "",
							"value": "",
							"disabled": true
						}
					]
				},
				"description": "Get endpoint to return all Trading Statuses for a Company Status"
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{Token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// faker library- used by postman to generate data",
					"// var randInt;",
					"// = Math.floor((Math.random()*1000 +2));",
					"var Alpha2_Country_Code = [\"GB\"]",
					"var Bank_Code = [\"NWBK\", \"LOBK\", \"NJBK\", \"NWCK\"]",
					"var Suburb = [\"Blossomfield\", \"Bowesfield\", \"Cassiobury\", \"Farley Wood\", \"Redbridge, London\"]",
					"var CountryCode = [\"UK\", \"PK\", \"PL\"]",
					"var Locale_code = [\"en-IE\", \"en-GB\"]",
					"var PostCode = [\"M33 7GG\", \"M22 AGG\", \"E16 JBL\"]",
					"",
					"var name = [\"Kreza\", \"Scul\", \"Sanj\", \"Muzi\", \"Sahau\", \"Krisank\", \"Kasi\", \"Kush\", \"jsua\", \"Kasui\", \"Sirza\", \"Jackpol\",\"Siraj\",\"juniin\",\"Joain\"]",
					"var Lname = [\"Kisnoi\", \"Singh\", \"Stuwart\", \"akhtar\", \"kumar\", \"das\", \"kishan\", \"brother\", \"khatai\", \"flintoff\", \"armstrong\", \"boom\",\"Siraj\"]",
					"var emilDomain = [\"gmail.com\", \"hotmail.com\", \"yahoo.com\", \"sage.com\", \"netflix.com\"]",
					"var emailAdd = [\"Kreza\", \"Scul\", \"Sanj\", \"Muzi\", \"Sahau\", \"Krisank\", \"Kasi\", \"Kush\", \"jsua\", \"Kasui\", \"Sirza\", \"Jackpol\",\"Siraj\",\"juniin\",\"Joain\"]",
					"var BicSwift = [\"ANTSGB2LXXX\", \"ANTSGB2LCHA\", \"ANTSGB2LDOC\", \"HGSLGB2LSET\"]",
					"",
					"pm.globals.set(\"Check_Digit\",  _.random(2,67));",
					"pm.globals.set(\"Sort_Code\", _.random(6,984563));",
					"pm.globals.set(\"Acct_Num\", _.random(8,73456378));",
					"",
					"pm.globals.set(\"phoneNumber1\", _.random(2,12345678901));",
					"pm.globals.set(\"phoneNumber\",  _.random(2,12345678901));",
					"pm.globals.set(\"txNumber\", _.random(6,12345678901));",
					"pm.globals.set(\"country_of_registration\", \"United Kingdom\");",
					"pm.globals.set(\"Alpha3_Country_Code\", \"UKI\");",
					"pm.variables.set(\"Locale_code\",Locale_code[_.random(Locale_code.length -1)]);",
					"",
					"pm.globals.set(\"name\", name[_.random(name.length -1)]);",
					"pm.globals.set(\"Lname\", Lname[_.random(Lname.length -1)]);",
					"",
					"// pm.globals.set(\"randInt\", _.random(2,67));",
					"// console.log(pm.globals.get(randInt));",
					"",
					"",
					"// pm.variables.set(\"ClientCode\", ClientCode[_.random(ClientCode.length -1)]+randInt);",
					"",
					"pm.globals.set(\"emailAdd\", emailAdd[_.random(emailAdd.length -1)]+_.random(10, 99)+\"@\"+emilDomain[_.random(emilDomain.length -1)]);",
					"pm.globals.set(\"emailAdd1\",\"{{$randomEmail}}\");",
					"",
					"",
					"",
					"pm.globals.set(\"BranchCode1\", _.random(1,951)+_.random(10, 99));",
					"pm.globals.set(\"AccountNumber1\", \"{{$randomBankAccount}}\");",
					"pm.globals.set(\"IBan1\", Alpha2_Country_Code[_.random(Alpha2_Country_Code.length -1)]+\"{{Check_Digit}}\"+Bank_Code[_.random(Bank_Code.length -1)]+\"{{Sort_Code}}\"+\"{{Acct_Num}}\");",
					"pm.globals.set(\"BicSwift1\",\"{{$randomBankAccountBic}}\");",
					"",
					"",
					"var bankAccountRequest = {",
					"\"Name\": \"{{$randomFirstName}}\",",
					"\"BranchCode\": _.random(1,951)+_.random(10, 99),",
					"\"AccountNumber\": _.random(6,12345678)+_.random(10, 99),",
					"\"IBan\": \"{{$randomBankAccountIban}}\",",
					"\"BicSwift\": BicSwift[_.random(BicSwift.length -1)]",
					"}",
					"pm.globals.set('bankAccountRequest', JSON.stringify(bankAccountRequest));",
					"",
					"",
					"pm.globals.set(\"Suburb\",Suburb[_.random(Suburb.length -1)]);",
					"",
					"pm.globals.set(\"PostCode\",PostCode[_.random(PostCode.length -1)]);",
					"",
					"pm.globals.set(\"CountryCode\",CountryCode[_.random(CountryCode.length -1)]);",
					"",
					"// dimension variables",
					"pm.globals.set(\"dimensionId\", \"d8a8b1b7-3746-467f-9f2e-5e34d197c2db\")",
					"pm.globals.set(\"dimensionTagId1\", \"7444680E-4D8C-4D1F-B905-434B83AE00B4\")",
					"pm.globals.set(\"dimensionTagId2\", \"FE1B4FC0-41AF-4162-820F-853464E54C06\")",
					"pm.globals.set(\"dimensionTagId3\", \"B1D9D988-C4C3-4EC5-BF62-0AF804917C29\")",
					"",
					"// //example",
					"const moment = require('moment');",
					"pm.globals.set(\"timestamp\", moment().format(\"YYYY-DD-MM hh:mm:ss\"));",
					"pm.globals.set(\"month\", moment().format(\"MM\"));",
					"pm.globals.set(\"todaydate\", moment().format(\"DD\"));",
					"",
					"// -------------Set Bearer Token-------------------------------------",
					"",
					"pm.globals.set(\"OAUTH_URL\",\"https://id-shadow.sage.com\")",
					"",
					"pm.sendRequest({",
					"      url:  pm.globals.get(\"OAUTH_URL\")+\"/oauth/token\", ",
					"      method: 'POST',",
					"      header: {",
					"        'Accept': 'application/json',",
					"        'Content-Type': 'application/json'",
					"      },",
					"      body: {",
					"          mode: 'raw',",
					"          raw: JSON.stringify",
					"          ({",
					"          \"grant_type\":\"client_credentials\",",
					"          \"client_id\":\"Jtp1PUKYt9A1jqA6XMLQ3rYzznwvSU8v\",",
					"          \"client_secret\":\"4srNaljfRcBnVbYgEpWGMDKFHho9u8p2YoB_-wCkW1qOqZCunBdu0Pd2YU8GlYM6\",",
					"          \"audience\":\"SBCDS/global\"",
					"          })   ",
					"      ",
					"      }",
					"  }, function (err, res) {",
					"        pm.environment.set(\"Token\", res.json().access_token);",
					"  });",
					"",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"value": "",
			"type": "string",
			"disabled": true
		},
		{
			"key": "ClientCode",
			"value": ""
		},
		{
			"key": "ContactCode",
			"value": ""
		},
		{
			"key": "employeeCode",
			"value": ""
		},
		{
			"key": "Termination_Reason",
			"value": ""
		},
		{
			"key": "CustomerCode",
			"value": ""
		},
		{
			"key": "supplierCode",
			"value": ""
		},
		{
			"key": "termination_Reason",
			"value": ""
		}
	]
}
